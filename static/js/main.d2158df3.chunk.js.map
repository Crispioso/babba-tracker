{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/entries/Entries.tsx","components/summary/Summary.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","Container","styled","Toolbar","withRouter","handleDateChange","history","formattedDate","format","push","AppBar","position","marginBottom","Typography","variant","className","DatePicker_ADatePicker","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","console","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","getDataByDate","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","lastEdit","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","user","currentUser","getKeyFromType","set","Object","objectSpread","email","handleUpdateData","update","handleArchiveData","archived","handleUnarchiveData","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","archiveEntry","unarchiveEntry","assign","dateFormat","babyName","Entries","isShowingUndoDelete","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderLastEditDetails","marginLeft","renderSortedEntries","_this$props","onChangeEntry","removeEntry","isLoading","items","paddingTop","paddingBottom","fontWeight","marginTop","CircularProgress","marginRight","sort","itemA","itemB","top","zIndex","backgroundColor","List","index","ListItem","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","aria-label","Create_default","Delete_default","Divider","Wrapper","div","maxHoursWithoutFeed","withFirebase","getTimeOfLatestFeed","latestFeed","b","startOfDay","endOfDay","renderText","timeOfLatestFeed","lastFeedInMinutes","differenceInMinutes","lastFeedInHours","differenceInHours","differenceInMinutesMinusHours","showFeedWarning","PriorityHigh_default","InfoOutlined_default","component","isShowingDeleteConfirmation","reversableDelete","componentWillMount","componentWillReceiveProps","nextProps","nextDate","_this$props2","unsubscription","newUnsubscriptions","newDate","undoDelete","closeDeleteConfirmation","handleRemove","showDeleteConfirmation","_this$props3","_this$state","Paper","summary_Summary","entries_Entries","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","Button","size","Close_default","StyledFormControl","FormControl","defaultState","Millilitres","handleSubmit","event","preventDefault","onFinish","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","editableTime","inputValue","onSubmit","TextField","label","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","selected","multiline","fullWidth","rowsMax","handleCheckboxChange","checked","NappyInput_StyledFormControl","FormGroup","FormLabel","FormControlLabel","control","Checkbox","convertTimeToInputString","SleepInput_StyledFormControl","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Wrapper","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","today","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","log","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","Dialog","fullScreen","TransitionComponent","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","background","default","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2158df3.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    date = \"\"\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n  archived?: boolean\n  lastEdit?: {\n    email: string\n    time: number\n  }\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore, firebaseAuth } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  archiveEntry: (item: Items) => void\n  unarchiveEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleArchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: true,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    handleUnarchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: false,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        archiveEntry: this.handleArchiveData,\n        unarchiveEntry: this.handleUnarchiveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography, Paper } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\ntype State = {\n  isShowingUndoDelete: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  state: State = {\n    isShowingUndoDelete: false,\n  }\n\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (\n          <>\n            {babyName} drank {item.amount} {item.unit}\n            {item.amount === '1' ? 's' : ''}\n          </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'h:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <span style={{ fontSize: '1.5rem', color: 'initial' }}>😴</span>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderLastEditDetails = (item: Items) => {\n    const { lastEdit } = item\n\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <span style={{ marginLeft: '1rem' }}>\n        {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </span>\n    )\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{\n            fontSize: '1rem',\n            paddingTop: '1.5rem',\n            paddingBottom: '1rem',\n            fontWeight: 500,\n            position: 'sticky',\n            top: '0',\n            zIndex: 1,\n            color: 'rgba(0, 0, 0, 0.54)',\n            backgroundColor: '#f5f5f5',\n          }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <div style={{ marginBottom: '104px', backgroundColor: '#fff' }}>\n          <List>\n            {items.map((item, index) => (\n              <div key={item.id}>\n                <ListItem>\n                  <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n                  <ListItemText\n                    primary={this.renderTitle(item)}\n                    secondary={this.renderEntryDate(item)}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      onClick={() => onChangeEntry(item)}\n                      aria-label=\"Edit\"\n                    >\n                      <CreateIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => removeEntry(item)}\n                      aria-label=\"Delete\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index + 1 < items.length && <Divider variant=\"middle\" />}\n              </div>\n            ))}\n          </List>\n        </div>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport PriorityIcon from '@material-ui/icons/PriorityHigh'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport {\n  startOfDay,\n  endOfDay,\n  differenceInHours,\n  differenceInMinutes,\n} from 'date-fns'\n\ntype Props = FirebaseFunctionProps & FirebaseData\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  padding: 1rem 0rem;\n  margin: 1rem;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n  align-items: center;\n`\n\nconst maxHoursWithoutFeed = 4\n\nclass Summary extends React.Component<Props, {}> {\n  componentDidMount() {\n    const { subscribeByDate } = this.props\n    subscribeByDate({\n      startDate: startOfDay(new Date()),\n      endDate: endOfDay(new Date()),\n    })\n  }\n\n  getTimeOfLatestFeed = (): number => {\n    const { feeds } = this.props\n\n    if (feeds.length === 1) {\n      return feeds[0].time\n    }\n\n    const feedsInDateOrder = feeds.sort((a, b) => a.time - b.time)\n    const latestFeed = feedsInDateOrder[feeds.length - 1]\n\n    if (latestFeed == null) {\n      return 0\n    }\n\n    return latestFeed.time\n  }\n\n  renderText(timeOfLatestFeed: number) {\n    const lastFeedInMinutes = differenceInMinutes(new Date(), timeOfLatestFeed)\n    const lastFeedInHours = differenceInHours(new Date(), timeOfLatestFeed)\n    const numberOfMinutesConvertedToHours = 60 * lastFeedInHours\n    const differenceInMinutesMinusHours =\n      lastFeedInMinutes - numberOfMinutesConvertedToHours\n\n    if (lastFeedInMinutes === 0) {\n      return <>Evelyn just ate</>\n    }\n\n    return (\n      <>\n        Last ate{' '}\n        <b>\n          {lastFeedInHours !== 0 &&\n            `${lastFeedInHours} hour${lastFeedInHours > 1 ? 's' : ''} `}\n          {differenceInMinutesMinusHours} minute\n          {differenceInMinutesMinusHours > 1 ? 's' : ''} ago\n        </b>\n      </>\n    )\n  }\n\n  render() {\n    const timeOfLatestFeed = this.getTimeOfLatestFeed()\n    const showFeedWarning =\n      differenceInHours(timeOfLatestFeed, new Date().getTime()) <=\n      -maxHoursWithoutFeed\n\n    if (timeOfLatestFeed === 0) {\n      return null\n    }\n\n    return (\n      <Wrapper>\n        {showFeedWarning ? (\n          <PriorityIcon color=\"error\" fontSize=\"large\" />\n        ) : (\n          <InfoIcon color=\"secondary\" fontSize=\"large\" />\n        )}\n        <Typography\n          variant=\"body1\"\n          component=\"p\"\n          style={{ marginLeft: '1rem' }}\n        >\n          {this.renderText(timeOfLatestFeed)}\n        </Typography>\n      </Wrapper>\n    )\n  }\n}\n\nexport default withFirebase()(Summary)\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\nimport { Paper } from '@material-ui/core'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n  isShowingDeleteConfirmation: boolean\n  reversableDelete?: Items\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n    isShowingDeleteConfirmation: false,\n    reversableDelete: undefined,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  undoDelete = (item?: Items) => {\n    this.closeDeleteConfirmation()\n    if (item !== undefined) {\n      this.props.unarchiveEntry(item)\n    }\n  }\n\n  handleRemove = (item: Items) => {\n    this.showDeleteConfirmation(item)\n    this.props.archiveEntry(item)\n  }\n\n  showDeleteConfirmation = (item: Items) =>\n    this.setState({ reversableDelete: item })\n\n  closeDeleteConfirmation = () => this.setState({ reversableDelete: undefined })\n\n  render() {\n    const { onChangeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading, reversableDelete } = this.state\n\n    return (\n      <>\n        <Paper>\n          <Summary />\n        </Paper>\n        <Entries\n          isLoading={isLoading}\n          date={date}\n          onChangeEntry={onChangeEntry}\n          removeEntry={this.handleRemove}\n          feeds={feeds}\n          nappies={nappies}\n          sleeps={sleeps}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={reversableDelete !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeDeleteConfirmation}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note archived</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => this.undoDelete(reversableDelete)}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.closeDeleteConfirmation}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: undefined,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.FluidOz} selected value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return ''\n    }\n\n    if (time === 0) {\n      return ''\n    }\n\n    const dateString = format(time, 'yyyy-MM-dd')\n    const timeString = format(time, 'HH:mm')\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  renderLastEditDetails = () => {\n    const { item } = this.props\n    if (item === undefined) {\n      return\n    }\n\n    const { lastEdit } = item\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Last edited by {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </Typography>\n    )\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <div style={{ marginBottom: '2.2rem' }}>\n          <Header>\n            <Typography\n              variant=\"h1\"\n              style={{ fontSize: '2rem', marginBottom: '0.5rem' }}\n              display=\"block\"\n            >\n              {isEditingItem ? 'Edit' : 'Add'} an entry\n            </Typography>\n            <IconButton\n              style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n              onClick={this.handleCloseClick}\n              aria-label=\"Close\"\n            >\n              <CloseSharp />\n            </IconButton>\n          </Header>\n          {isEditingItem && this.renderLastEditDetails()}\n        </div>\n        {!isEditingItem && (\n          <FormControl style={{ marginBottom: '2rem' }}>\n            <FormLabel>Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Type\"\n              name=\"type\"\n              value={selectedInputType}\n              onChange={this.handleTypeChange}\n            >\n              <FormControlLabel\n                value={ItemTypes.Feed}\n                control={<Radio />}\n                label=\"Feed\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Nappy}\n                control={<Radio />}\n                label=\"Nappy\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Sleep}\n                control={<Radio />}\n                label=\"Sleep\"\n                disabled={isEditingItem}\n              />\n            </RadioGroup>\n          </FormControl>\n        )}\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}