{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/entries/Entries.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","Container","styled","Toolbar","withRouter","handleDateChange","history","formattedDate","format","push","AppBar","position","marginBottom","Typography","variant","className","DatePicker_ADatePicker","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","console","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","getDataByDate","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","getKeyFromType","set","handleUpdateData","update","handleRemoveData","delete","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","removeEntry","Object","assign","dateFormat","babyName","Entries","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderSortedEntries","_this$props","onChangeEntry","items","isLoading","paddingTop","paddingBottom","marginTop","CircularProgress","marginRight","marginLeft","sort","itemA","itemB","top","zIndex","backgroundColor","List","ListItem","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","aria-label","Create_default","Delete_default","withFirebase","componentWillMount","startOfDay","endOfDay","componentWillReceiveProps","nextProps","nextDate","_this$props2","unsubscription","newUnsubscriptions","newDate","_this$props3","_this$state","entries_Entries","StyledFormControl","FormControl","defaultState","Millilitres","handleSubmit","event","preventDefault","onFinish","objectSpread","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","editableTime","inputValue","onSubmit","TextField","label","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","multiline","fullWidth","rowsMax","Button","handleCheckboxChange","checked","NappyInput_StyledFormControl","FormGroup","FormLabel","FormControlLabel","control","Checkbox","convertTimeToInputString","SleepInput_StyledFormControl","Wrapper","div","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","today","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","log","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","currentUser","onAuthStateChanged","user","Dialog","fullScreen","TransitionComponent","onClose","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","component","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d4143be.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    date = \"\"\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n    > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set(item)\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update(item)\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleRemoveData = (item: Items) => {\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .delete()\n      } catch (error) {\n        console.error('Error remove Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        removeEntry: this.handleRemoveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: \"Europe/London\" })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (<>\n          {babyName} drank {item.amount} {item.unit}{\n            item.amount === '1' ? 's' : ''\n          }\n        </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n          }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'HH:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <span style={{ fontSize: '1.5rem', color: 'initial' }}>😴</span>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', paddingTop: \"1.5rem\", paddingBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', paddingTop: \"1.5rem\", paddingBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{ fontSize: '2rem', paddingTop: \"1.5rem\", paddingBottom: \"1rem\", position: \"sticky\", top: \"0\", zIndex: 1, backgroundColor: \"#fafafa\" }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <List style={{ paddingBottom: \"88px\" }}>\n          {items.map(item => (\n            <ListItem key={item.id}>\n              <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n              <ListItemText\n                primary={this.renderTitle(item)}\n                secondary={this.renderEntryDate(item)}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  onClick={() => onChangeEntry(item)}\n                  aria-label=\"Edit\"\n                >\n                  <CreateIcon />\n                </IconButton>\n                <IconButton\n                  onClick={() => removeEntry(item)}\n                  aria-label=\"Delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  render() {\n    const { onChangeEntry, removeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading } = this.state\n\n    return (\n      <Entries\n        isLoading={isLoading}\n        date={date}\n        onChangeEntry={onChangeEntry}\n        removeEntry={removeEntry}\n        feeds={feeds}\n        nappies={nappies}\n        sleeps={sleeps}\n      />\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: undefined,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, \"yyyy-MM-dd\")\n    const timeString = format(editableTime, \"HH:mm\")\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, \"yyyy-MM-dd\")\n    const timeString = format(editableTime, \"HH:mm\")\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return \"\"\n    }\n\n    if (time === 0) {\n      return \"\"\n    }\n\n    const dateString = format(time, \"yyyy-MM-dd\")\n    const timeString = format(time, \"HH:mm\")\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <Header>\n          <Typography\n            variant=\"h1\"\n            style={{ fontSize: '2rem', marginBottom: '2.2rem' }}\n          >\n            {isEditingItem ? 'Edit' : 'Add'} an entry\n          </Typography>\n          <IconButton\n            style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n            onClick={this.handleCloseClick}\n            aria-label=\"Close\"\n          >\n            <CloseSharp />\n          </IconButton>\n        </Header>\n        <FormControl style={{ marginBottom: '2rem' }}>\n          <FormLabel>Type</FormLabel>\n          <RadioGroup\n            aria-label=\"Type\"\n            name=\"type\"\n            value={selectedInputType}\n            onChange={this.handleTypeChange}\n          >\n            <FormControlLabel\n              value={ItemTypes.Feed}\n              control={<Radio />}\n              label=\"Feed\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Nappy}\n              control={<Radio />}\n              label=\"Nappy\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Sleep}\n              control={<Radio />}\n              label=\"Sleep\"\n              disabled={isEditingItem}\n            />\n          </RadioGroup>\n        </FormControl>\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}