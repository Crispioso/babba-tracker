{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","types.ts","components/firebase/withFirebase.tsx","components/firebase/Firebase.tsx","components/entries/Entries.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","dateInput","React","handleChange","date","_this","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","_this2","this","value","index_es","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","_queryString$parse$da","queryString","parse","Array","Date","ItemTypes","Units","DataKeys","Container","styled","Toolbar","_templateObject","Header","handleDateChange","history","formattedDate","format","push","concat","AppBar_default","position","marginBottom","variant","className","DatePicker_ADatePicker","withRouter","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","Firebase","Object","classCallCheck","feeds","nappies","isInitialised","initialise","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","warn","abrupt","stop","getFeeds","toConsumableArray","getNappies","dataKeysList","Feeds","Nappies","wrapWithFirebaseComponent","ChildComponent","_React$Component","ConnectFirebaseToComponent","_getPrototypeOf2","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","unsubscriptions","getDataByDate","_ref2","_ref","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","sent","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","t0","error","_x","subscribeByDate","_ref3","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","mapEventNappyDataToItem","Nappy","isPoop","isWee","handleAddData","getKeyFromType","set","handleUpdateData","_ref4","_callee2","_context2","update","_x2","handleRemoveData","delete","inherits","createClass","Error","feed","nappy","filter","updateDataReducer","removeDataReducer","dataFunctions","addEntry","updateEntry","removeEntry","assign","dateFormat","babyName","Entries","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderSortedEntries","_this$props","onChangeEntry","isLoading","items","marginTop","CircularProgress_default","marginRight","marginLeft","sort","itemA","itemB","List_default","ListItem_default","ListItemIcon_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","Delete_default","EntriesController","componentWillMount","startOfDay","endOfDay","componentWillReceiveProps","nextProps","nextDate","newDate","_this$props2","newUnsubscriptions","unsubscription","_this$props3","_this$state","entries_Entries","withFirebase","StyledFormControl","FormControl","FeedInput_templateObject","defaultState","Millilitres","FeedInput","handleSubmit","event","preventDefault","onFinish","uuid","objectSpread","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","ISOstring","toISOString","strippedTimeString","substring","onSubmit","label","InputLabelProps","shrink","htmlFor","width","SelectProps","native","select","multiline","fullWidth","rowsMax","EntryInput","handleCheckboxChange","checked","control","Wrapper","div","EntryInput_templateObject","_templateObject2","selectedInputType","isEditingItem","handleTypeChange","objectDestructuringEmpty","handleCloseClick","entry_input_FeedInput","NappyInput","EntryInput_Header","top","right","icons_index_es","FormControl_default","FormLabel_default","RadioGroup_default","name","FormControlLabel_default","Radio_default","disabled","renderInput","TransitionUp","react_default","createElement","Slide_default","direction","App_templateObject","Body","App_templateObject2","today","App","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","currentUser","onAuthStateChanged","user","_this3","Dialog_default","fullScreen","TransitionComponent","onClose","entry_input_EntryInput","entries_EntriesController","Fab_default","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","Component","Boolean","window","hostname","match","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","typography","useNextVariants","UnknownRoute","ReactDOM","render","BrowserRouter","utils","DateFnsUtils","styles","CssBaseline_default","header_Header","Switch","Route","exact","path","src_App","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9673ce43.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location) => {\n  const { search } = location\n  let { date = '' } = queryString.parse(search)\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '1.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Evelyn tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport type Items = Feed | Nappy\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const newState = {}\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set(item)\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update(item)\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleRemoveData = (item: Items) => {\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .delete()\n      } catch (error) {\n        console.error('Error remove Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        removeEntry: this.handleRemoveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies }\n  }\n\n  getFeeds = () => [...this.feeds]\n\n  getNappies = () => [...this.nappies]\n}\n\nexport default new Firebase()\n","import * as React from 'react'\nimport { Feed, Items, Nappy, ItemTypes } from '../../types'\nimport { format } from 'date-fns'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  isLoading: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return `${babyName} drank ${item.amount}${item.unit}${\n          item.amount === '1' ? 's' : ''\n        }`\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'HH:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', marginBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {format(date, dateFormat)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', marginBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {format(date, dateFormat)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{ fontSize: '2rem', marginBottom: '1rem' }}\n          variant=\"h2\"\n        >\n          {format(date, dateFormat)}\n        </Typography>\n        <List>\n          {items.map(item => (\n            <ListItem key={item.id}>\n              <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n              <ListItemText\n                primary={this.renderTitle(item)}\n                secondary={this.renderEntryDate(item)}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  onClick={() => onChangeEntry(item)}\n                  aria-label=\"Edit\"\n                >\n                  <CreateIcon />\n                </IconButton>\n                <IconButton\n                  onClick={() => removeEntry(item)}\n                  aria-label=\"Delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  render() {\n    const { onChangeEntry, removeEntry, feeds, nappies } = this.props\n    const { date, isLoading } = this.state\n\n    return (\n      <Entries\n        isLoading={isLoading}\n        date={date}\n        onChangeEntry={onChangeEntry}\n        removeEntry={removeEntry}\n        feeds={feeds}\n        nappies={nappies}\n      />\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport { format } from 'date-fns'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n} from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time: number\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: new Date().getTime(),\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time,\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time } = this.state\n\n    const ISOstring = new Date(time).toISOString()\n    const strippedTimeString = ISOstring.substring(0, ISOstring.length - 5)\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={strippedTimeString}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Nappy, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n} from '@material-ui/core'\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time: number\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: new Date().getTime(),\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time,\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time } = this.state\n    const ISOstring = new Date(time).toISOString()\n    const strippedTimeString = ISOstring.substring(0, ISOstring.length - 5)\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={strippedTimeString}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n          />\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </FormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n    }\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <Header>\n          <Typography\n            variant=\"h1\"\n            style={{ fontSize: '2rem', marginBottom: '2.2rem' }}\n          >\n            {isEditingItem ? 'Edit' : 'Add'} an entry\n          </Typography>\n          <IconButton\n            style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n            onClick={this.handleCloseClick}\n            aria-label=\"Close\"\n          >\n            <CloseSharp />\n          </IconButton>\n        </Header>\n        <FormControl style={{ marginBottom: '1rem' }}>\n          <FormLabel>Type</FormLabel>\n          <RadioGroup\n            aria-label=\"Type\"\n            name=\"type\"\n            value={selectedInputType}\n            onChange={this.handleTypeChange}\n          >\n            <FormControlLabel\n              value={ItemTypes.Feed}\n              control={<Radio />}\n              label=\"Feed\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Nappy}\n              control={<Radio />}\n              label=\"Nappy\"\n              disabled={isEditingItem}\n            />\n          </RadioGroup>\n        </FormControl>\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n      return\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}