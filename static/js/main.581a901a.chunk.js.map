{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","types.ts","components/firebase/withFirebase.tsx","components/firebase/Firebase.tsx","components/entries/Entries.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","dateInput","React","handleChange","date","_this","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","_this2","this","value","index_es","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","_queryString$parse$da","queryString","parse","Array","Date","ItemTypes","Units","DataKeys","Container","styled","Toolbar","_templateObject","Header","handleDateChange","history","formattedDate","format","push","concat","AppBar_default","position","marginBottom","variant","className","DatePicker_ADatePicker","withRouter","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","Firebase","Object","classCallCheck","feeds","nappies","sleeps","isInitialised","initialise","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","warn","abrupt","stop","getFeeds","toConsumableArray","getNappies","getSleeps","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","_React$Component","ConnectFirebaseToComponent","_getPrototypeOf2","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","unsubscriptions","getDataByDate","_ref2","_ref","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","sent","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","t0","error","_x","subscribeByDate","_ref3","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","getKeyFromType","set","handleUpdateData","_ref4","_callee2","_context2","log","update","_x2","handleRemoveData","delete","inherits","createClass","Error","feed","nappy","sleep","filter","updateDataReducer","removeDataReducer","dataFunctions","addEntry","updateEntry","removeEntry","assign","dateFormat","babyName","Entries","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderSortedEntries","_this$props","onChangeEntry","isLoading","items","marginTop","CircularProgress_default","marginRight","marginLeft","sort","itemA","itemB","List_default","ListItem_default","ListItemIcon_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","Delete_default","EntriesController","componentWillMount","startOfDay","endOfDay","componentWillReceiveProps","nextProps","nextDate","newDate","_this$props2","newUnsubscriptions","unsubscription","_this$props3","_this$state","entries_Entries","withFirebase","StyledFormControl","FormControl","FeedInput_templateObject","defaultState","Millilitres","FeedInput","handleSubmit","event","preventDefault","onFinish","objectSpread","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","ISOstring","toISOString","strippedTimeString","substring","onSubmit","label","InputLabelProps","shrink","required","htmlFor","width","SelectProps","native","select","multiline","fullWidth","rowsMax","NappyInput_templateObject","EntryInput","handleCheckboxChange","checked","NappyInput_StyledFormControl","control","SleepInput_templateObject","SleepInput","convertTimeToInputString","SleepInput_StyledFormControl","Wrapper","div","EntryInput_templateObject","_templateObject2","selectedInputType","isEditingItem","handleTypeChange","objectDestructuringEmpty","handleCloseClick","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Header","top","right","icons_index_es","FormControl_default","FormLabel_default","RadioGroup_default","name","FormControlLabel_default","Radio_default","disabled","renderInput","TransitionUp","react_default","createElement","Slide_default","direction","Body","App_templateObject","today","App","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","currentUser","onAuthStateChanged","user","_this3","Dialog_default","fullScreen","TransitionComponent","onClose","entry_input_EntryInput","entries_EntriesController","Fab_default","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","typography","useNextVariants","UnknownRoute","ReactDOM","render","BrowserRouter","basename","utils","DateFnsUtils","styles","CssBaseline_default","header_Header","Switch","Route","exact","path","src_App","component","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.581a901a.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location) => {\n  const { search } = location\n  let { date = '' } = queryString.parse(search)\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '1.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set(item)\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      try {\n        console.log(item)\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update(item)\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleRemoveData = (item: Items) => {\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .delete()\n      } catch (error) {\n        console.error('Error remove Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        removeEntry: this.handleRemoveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport { format, formatDistance } from 'date-fns'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Baby girl'\n\nclass Entries extends React.Component<Props, {}> {\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return `${babyName} drank ${item.amount}${item.unit}${\n          item.amount === '1' ? 's' : ''\n        }`\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'HH:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <span style={{ fontSize: '1.5rem', color: 'initial' }}>😴</span>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', marginBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {format(date, dateFormat)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{ fontSize: '2rem', marginBottom: '3rem' }}\n            variant=\"h2\"\n          >\n            {format(date, dateFormat)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{ fontSize: '2rem', marginBottom: '1rem' }}\n          variant=\"h2\"\n        >\n          {format(date, dateFormat)}\n        </Typography>\n        <List>\n          {items.map(item => (\n            <ListItem key={item.id}>\n              <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n              <ListItemText\n                primary={this.renderTitle(item)}\n                secondary={this.renderEntryDate(item)}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  onClick={() => onChangeEntry(item)}\n                  aria-label=\"Edit\"\n                >\n                  <CreateIcon />\n                </IconButton>\n                <IconButton\n                  onClick={() => removeEntry(item)}\n                  aria-label=\"Delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  render() {\n    const { onChangeEntry, removeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading } = this.state\n\n    return (\n      <Entries\n        isLoading={isLoading}\n        date={date}\n        onChangeEntry={onChangeEntry}\n        removeEntry={removeEntry}\n        feeds={feeds}\n        nappies={nappies}\n        sleeps={sleeps}\n      />\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: new Date().getTime(),\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time,\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const ISOstring = new Date(time).toISOString()\n    const strippedTimeString = ISOstring.substring(0, ISOstring.length - 5)\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={strippedTimeString}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: new Date().getTime(),\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time,\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n    const ISOstring = new Date(time).toISOString()\n    const strippedTimeString = ISOstring.substring(0, ISOstring.length - 5)\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={strippedTimeString}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: new Date().getTime(),\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time,\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date().getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number) => {\n    if (time == null || time === 0) {\n      return ''\n    }\n\n    const ISOstring = new Date(time).toISOString()\n    return ISOstring.substring(0, ISOstring.length - 5)\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <Header>\n          <Typography\n            variant=\"h1\"\n            style={{ fontSize: '2rem', marginBottom: '2.2rem' }}\n          >\n            {isEditingItem ? 'Edit' : 'Add'} an entry\n          </Typography>\n          <IconButton\n            style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n            onClick={this.handleCloseClick}\n            aria-label=\"Close\"\n          >\n            <CloseSharp />\n          </IconButton>\n        </Header>\n        <FormControl style={{ marginBottom: '2rem' }}>\n          <FormLabel>Type</FormLabel>\n          <RadioGroup\n            aria-label=\"Type\"\n            name=\"type\"\n            value={selectedInputType}\n            onChange={this.handleTypeChange}\n          >\n            <FormControlLabel\n              value={ItemTypes.Feed}\n              control={<Radio />}\n              label=\"Feed\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Nappy}\n              control={<Radio />}\n              label=\"Nappy\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Sleep}\n              control={<Radio />}\n              label=\"Sleep\"\n              disabled={isEditingItem}\n            />\n          </RadioGroup>\n        </FormControl>\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}