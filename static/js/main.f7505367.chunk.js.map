{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/entries/Entry.tsx","components/entries/Entries.tsx","components/summary/Summary.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","Container","styled","Toolbar","withRouter","handleDateChange","history","formattedDate","format","push","AppBar","position","marginBottom","Typography","variant","className","DatePicker_ADatePicker","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","console","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","babyName","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","getDataByDate","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","lastEdit","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","user","currentUser","getKeyFromType","set","Object","objectSpread","email","handleUpdateData","update","handleArchiveData","archived","handleUnarchiveData","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","archiveEntry","unarchiveEntry","assign","dateFormat","DeleteButton","Button","ButtonWrapper","div","TypeIconWrapper","span","isDouble","Entry","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","renderLastEditDetails","fontSize","margin","padding","_this$props","expanded","onEdit","onRemove","log","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","Chip","label","size","marginLeft","ExpansionPanelDetails","ExpansionPanelActions","Create_default","Delete_default","Entries","isShowingUndoDelete","expandedEntryKey","handleEntryClick","onChangeEntry","removeEntry","isLoading","items","paddingTop","paddingBottom","fontWeight","marginTop","CircularProgress","marginRight","sort","itemA","itemB","top","zIndex","backgroundColor","entries_Entry","Wrapper","maxHoursWithoutFeed","withFirebase","getTimeOfLatestFeed","latestFeed","b","startOfDay","endOfDay","renderText","timeOfLatestFeed","lastFeedInMinutes","differenceInMinutes","lastFeedInHours","differenceInHours","differenceInMinutesMinusHours","showFeedWarning","PriorityHigh_default","InfoOutlined_default","component","isShowingDeleteConfirmation","reversableDelete","componentWillMount","componentWillReceiveProps","nextProps","nextDate","_this$props2","unsubscription","newUnsubscriptions","newDate","undoDelete","closeDeleteConfirmation","handleRemove","showDeleteConfirmation","_this$props3","_this$state","Paper","square","summary_Summary","entries_Entries","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","aria-label","Close_default","StyledFormControl","FormControl","defaultState","FluidOz","handleSubmit","event","preventDefault","onFinish","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","Millilitres","handleNoteChange","_this$state2","editableTime","inputValue","onSubmit","TextField","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","multiline","fullWidth","rowsMax","handleCheckboxChange","checked","NappyInput_StyledFormControl","FormGroup","FormLabel","FormControlLabel","control","Checkbox","convertTimeToInputString","SleepInput_StyledFormControl","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Wrapper","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","today","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","Dialog","fullScreen","TransitionComponent","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","blueGrey","background","default","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f7505367.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    date = \"\"\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n  archived?: boolean\n  lastEdit?: {\n    email: string\n    time: number\n  }\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n\nexport const babyName = 'Evelyn'\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore, firebaseAuth } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  archiveEntry: (item: Items) => void\n  unarchiveEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleArchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: true,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    handleUnarchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: false,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        archiveEntry: this.handleArchiveData,\n        unarchiveEntry: this.handleUnarchiveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport Chip from '@material-ui/core/Chip'\nimport { Typography } from '@material-ui/core'\nimport { Items, Sleep, ItemTypes, babyName } from '../../types'\n\ntype Props = {\n  expanded: boolean\n  item: Items\n  onClick: (id: string) => void\n  onEdit: () => void\n  onRemove: () => void\n}\n\nconst dateFormat = 'iiii do LLL'\n\n// FIXME - I should be properly styling this, not setting important\nconst DeleteButton = styled(Button)`\n  color: #fff !important;\n  background-color: rgb(220, 0, 78) !important;\n  :hover {\n    background-color: rgb(154, 0, 54) !important;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  margin-left: 0 !important;\n  margin-bottom: 1rem;\n  margin-right: 16px;\n`\n\nconst TypeIconWrapper = styled.span`\n  font-size: ${(props: { isDouble?: boolean }) =>\n    props.isDouble ? '0.5rem' : '1rem'};\n  margin-right: 1rem;\n  padding-top: ${(props: { isDouble?: boolean }) =>\n    props.isDouble ? '8px' : '2px'};\n`\n\nclass Entry extends React.Component<Props, {}> {\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (\n          <>\n            Drank {item.amount} {item.unit}\n          </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `Did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'h:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return <TypeIconWrapper>{'🍼'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <TypeIconWrapper>😴</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return <TypeIconWrapper isDouble>{'💩💦'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return <TypeIconWrapper>{'💩'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return <TypeIconWrapper>{'💦'}</TypeIconWrapper>\n    }\n\n    return <></>\n  }\n\n  renderLastEditDetails = (item: Items) => {\n    const { lastEdit } = item\n\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <p\n        style={{\n          color: 'rgba(0, 0, 0, 0.54)',\n          fontSize: '0.8rem',\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        Last edited by {lastEdit.email} at {format(lastEdit.time, 'p')}\n      </p>\n    )\n  }\n\n  render() {\n    const { item, expanded, onClick, onEdit, onRemove } = this.props\n\n    console.log()\n\n    return (\n      <ExpansionPanel expanded={expanded} onChange={() => onClick(item.id)}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`content-${item.id}`}\n          id={`header-${item.id}`}\n        >\n          {this.renderTypeIcon(item)}\n          <Typography>{this.renderTitle(item)}</Typography>\n          {item.note !== undefined && item.note !== '' && (\n            <Chip label=\"note\" size=\"small\" style={{ marginLeft: '1rem' }} />\n          )}\n        </ExpansionPanelSummary>\n        {item.note !== undefined && item.note !== '' && (\n          <ExpansionPanelDetails>\n            <Typography variant=\"body1\">{item.note}</Typography>\n          </ExpansionPanelDetails>\n        )}\n        <ExpansionPanelDetails>\n          {this.renderLastEditDetails(item)}\n        </ExpansionPanelDetails>\n        <ExpansionPanelActions>\n          <ButtonWrapper>\n            <Button variant=\"contained\" color=\"default\" onClick={onEdit}>\n              Edit\n              <CreateIcon style={{ marginLeft: '1rem' }} />\n            </Button>\n          </ButtonWrapper>\n          <ButtonWrapper>\n            <DeleteButton\n              variant=\"contained\"\n              color=\"default\"\n              onClick={onRemove}\n            >\n              Delete\n              <DeleteIcon style={{ marginLeft: '1rem' }} />\n            </DeleteButton>\n          </ButtonWrapper>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    )\n  }\n}\n\nexport default Entry\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport Entry from './Entry'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport { styled } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography, Paper } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\ntype State = {\n  isShowingUndoDelete: boolean\n  expandedEntryKey?: string\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  state: State = {\n    isShowingUndoDelete: false,\n    expandedEntryKey: undefined,\n  }\n\n  handleEntryClick = (id: string) => {\n    const { expandedEntryKey } = this.state\n\n    if (expandedEntryKey === id) {\n      this.setState({ expandedEntryKey: undefined })\n      return\n    }\n\n    this.setState({ expandedEntryKey: id })\n  }\n\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n  render() {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n    const { expandedEntryKey } = this.state\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{\n            fontSize: '1rem',\n            paddingTop: '1.5rem',\n            paddingBottom: '1rem',\n            fontWeight: 500,\n            position: 'sticky',\n            top: '0',\n            zIndex: 1,\n            color: 'rgba(0, 0, 0, 0.54)',\n            backgroundColor: '#f5f5f5',\n          }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <div style={{ marginBottom: '104px' }}>\n          {items.map(item => (\n            <Entry\n              key={item.id}\n              expanded={\n                expandedEntryKey !== undefined && expandedEntryKey === item.id\n              }\n              item={item}\n              onClick={this.handleEntryClick}\n              onEdit={() => onChangeEntry(item)}\n              onRemove={() => removeEntry(item)}\n            />\n          ))}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport PriorityIcon from '@material-ui/icons/PriorityHigh'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport {\n  startOfDay,\n  endOfDay,\n  differenceInHours,\n  differenceInMinutes,\n} from 'date-fns'\n\ntype Props = FirebaseFunctionProps & FirebaseData\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  padding: 1rem 0rem;\n  margin: 1rem;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n  align-items: center;\n`\n\nconst maxHoursWithoutFeed = 4\n\nclass Summary extends React.Component<Props, {}> {\n  componentDidMount() {\n    const { subscribeByDate } = this.props\n    subscribeByDate({\n      startDate: startOfDay(new Date()),\n      endDate: endOfDay(new Date()),\n    })\n  }\n\n  getTimeOfLatestFeed = (): number => {\n    const { feeds } = this.props\n\n    if (feeds.length === 1) {\n      return feeds[0].time\n    }\n\n    const feedsInDateOrder = feeds.sort((a, b) => a.time - b.time)\n    const latestFeed = feedsInDateOrder[feeds.length - 1]\n\n    if (latestFeed == null) {\n      return 0\n    }\n\n    return latestFeed.time\n  }\n\n  renderText(timeOfLatestFeed: number) {\n    const lastFeedInMinutes = differenceInMinutes(new Date(), timeOfLatestFeed)\n    const lastFeedInHours = differenceInHours(new Date(), timeOfLatestFeed)\n    const numberOfMinutesConvertedToHours = 60 * lastFeedInHours\n    const differenceInMinutesMinusHours =\n      lastFeedInMinutes - numberOfMinutesConvertedToHours\n\n    if (lastFeedInMinutes === 0) {\n      return <>Evelyn just ate</>\n    }\n\n    return (\n      <>\n        Last ate{' '}\n        <b>\n          {lastFeedInHours !== 0 &&\n            `${lastFeedInHours} hour${lastFeedInHours > 1 ? 's' : ''} `}\n          {differenceInMinutesMinusHours} minute\n          {differenceInMinutesMinusHours > 1 ? 's' : ''} ago\n        </b>\n      </>\n    )\n  }\n\n  render() {\n    const timeOfLatestFeed = this.getTimeOfLatestFeed()\n    const showFeedWarning =\n      differenceInHours(timeOfLatestFeed, new Date().getTime()) <=\n      -maxHoursWithoutFeed\n\n    if (timeOfLatestFeed === 0) {\n      return null\n    }\n\n    return (\n      <Wrapper>\n        {showFeedWarning ? (\n          <PriorityIcon color=\"error\" fontSize=\"large\" />\n        ) : (\n          <InfoIcon color=\"secondary\" fontSize=\"large\" />\n        )}\n        <Typography\n          variant=\"body1\"\n          component=\"p\"\n          style={{ marginLeft: '1rem' }}\n        >\n          {this.renderText(timeOfLatestFeed)}\n        </Typography>\n      </Wrapper>\n    )\n  }\n}\n\nexport default withFirebase()(Summary)\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\nimport { Paper } from '@material-ui/core'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n  isShowingDeleteConfirmation: boolean\n  reversableDelete?: Items\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n    isShowingDeleteConfirmation: false,\n    reversableDelete: undefined,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  undoDelete = (item?: Items) => {\n    this.closeDeleteConfirmation()\n    if (item !== undefined) {\n      this.props.unarchiveEntry(item)\n    }\n  }\n\n  handleRemove = (item: Items) => {\n    this.showDeleteConfirmation(item)\n    this.props.archiveEntry(item)\n  }\n\n  showDeleteConfirmation = (item: Items) =>\n    this.setState({ reversableDelete: item })\n\n  closeDeleteConfirmation = () => this.setState({ reversableDelete: undefined })\n\n  render() {\n    const { onChangeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading, reversableDelete } = this.state\n\n    return (\n      <>\n        <Paper square={true}>\n          <Summary />\n        </Paper>\n        <Entries\n          isLoading={isLoading}\n          date={date}\n          onChangeEntry={onChangeEntry}\n          removeEntry={this.handleRemove}\n          feeds={feeds}\n          nappies={nappies}\n          sleeps={sleeps}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={reversableDelete !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeDeleteConfirmation}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note archived</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => this.undoDelete(reversableDelete)}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.closeDeleteConfirmation}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.FluidOz,\n  note: '',\n  time: undefined,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return ''\n    }\n\n    if (time === 0) {\n      return ''\n    }\n\n    const dateString = format(time, 'yyyy-MM-dd')\n    const timeString = format(time, 'HH:mm')\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  renderLastEditDetails = () => {\n    const { item } = this.props\n    if (item === undefined) {\n      return\n    }\n\n    const { lastEdit } = item\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Last edited by {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </Typography>\n    )\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <div style={{ marginBottom: '2.2rem' }}>\n          <Header>\n            <Typography\n              variant=\"h1\"\n              style={{ fontSize: '2rem', marginBottom: '0.5rem' }}\n              display=\"block\"\n            >\n              {isEditingItem ? 'Edit' : 'Add'} an entry\n            </Typography>\n            <IconButton\n              style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n              onClick={this.handleCloseClick}\n              aria-label=\"Close\"\n            >\n              <CloseSharp />\n            </IconButton>\n          </Header>\n          {isEditingItem && this.renderLastEditDetails()}\n        </div>\n        {!isEditingItem && (\n          <FormControl style={{ marginBottom: '2rem' }}>\n            <FormLabel>Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Type\"\n              name=\"type\"\n              value={selectedInputType}\n              onChange={this.handleTypeChange}\n            >\n              <FormControlLabel\n                value={ItemTypes.Feed}\n                control={<Radio />}\n                label=\"Feed\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Nappy}\n                control={<Radio />}\n                label=\"Nappy\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Sleep}\n                control={<Radio />}\n                label=\"Sleep\"\n                disabled={isEditingItem}\n              />\n            </RadioGroup>\n          </FormControl>\n        )}\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}