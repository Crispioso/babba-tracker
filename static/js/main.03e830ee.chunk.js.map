{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/entries/Entries.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","Container","styled","Toolbar","withRouter","handleDateChange","history","formattedDate","format","push","AppBar","position","marginBottom","Typography","variant","className","DatePicker_ADatePicker","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","console","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","getDataByDate","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","user","currentUser","getKeyFromType","set","Object","objectSpread","lastEdit","email","handleUpdateData","update","handleArchiveData","archived","handleUnarchiveData","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","archiveEntry","unarchiveEntry","assign","dateFormat","babyName","Entries","isShowingUndoDelete","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderSortedEntries","_this$props","onChangeEntry","removeEntry","items","isLoading","paddingTop","paddingBottom","marginTop","CircularProgress","marginRight","marginLeft","sort","itemA","itemB","top","zIndex","backgroundColor","List","ListItem","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","aria-label","Create_default","Delete_default","withFirebase","isShowingDeleteConfirmation","reversableDelete","componentWillMount","startOfDay","endOfDay","componentWillReceiveProps","nextProps","nextDate","_this$props2","unsubscription","newUnsubscriptions","newDate","undoDelete","closeDeleteConfirmation","handleRemove","showDeleteConfirmation","_this$props3","_this$state","entries_Entries","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","Button","size","Close_default","StyledFormControl","FormControl","defaultState","Millilitres","handleSubmit","event","preventDefault","onFinish","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","editableTime","inputValue","onSubmit","TextField","label","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","multiline","fullWidth","rowsMax","handleCheckboxChange","checked","NappyInput_StyledFormControl","FormGroup","FormLabel","FormControlLabel","control","Checkbox","convertTimeToInputString","SleepInput_StyledFormControl","Wrapper","div","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","today","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","log","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","Dialog","fullScreen","TransitionComponent","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","component","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.03e830ee.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    date = \"\"\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n  archived?: boolean\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore, firebaseAuth } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  archiveEntry: (item: Items) => void\n  unarchiveEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleArchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: true,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    handleUnarchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: false,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        archiveEntry: this.handleArchiveData,\n        unarchiveEntry: this.handleUnarchiveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\ntype State = {\n  isShowingUndoDelete: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  state: State = {\n    isShowingUndoDelete: false,\n  }\n\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (\n          <>\n            {babyName} drank {item.amount} {item.unit}\n            {item.amount === '1' ? 's' : ''}\n          </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'HH:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <span style={{ fontSize: '1.5rem', color: 'initial' }}>😴</span>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '2rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '2rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{\n            fontSize: '2rem',\n            paddingTop: '1.5rem',\n            paddingBottom: '1rem',\n            position: 'sticky',\n            top: '0',\n            zIndex: 1,\n            backgroundColor: '#fafafa',\n          }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <List style={{ paddingBottom: '88px' }}>\n          {items.map(item => (\n            <ListItem key={item.id}>\n              <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n              <ListItemText\n                primary={this.renderTitle(item)}\n                secondary={this.renderEntryDate(item)}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  onClick={() => onChangeEntry(item)}\n                  aria-label=\"Edit\"\n                >\n                  <CreateIcon />\n                </IconButton>\n                <IconButton\n                  onClick={() => removeEntry(item)}\n                  aria-label=\"Delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n  isShowingDeleteConfirmation: boolean\n  reversableDelete?: Items\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n    isShowingDeleteConfirmation: false,\n    reversableDelete: undefined,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  undoDelete = (item?: Items) => {\n    this.closeDeleteConfirmation()\n    if (item !== undefined) {\n      this.props.unarchiveEntry(item)\n    }\n  }\n\n  handleRemove = (item: Items) => {\n    this.showDeleteConfirmation(item)\n    this.props.archiveEntry(item)\n  }\n\n  showDeleteConfirmation = (item: Items) =>\n    this.setState({ reversableDelete: item })\n\n  closeDeleteConfirmation = () => this.setState({ reversableDelete: undefined })\n\n  render() {\n    const { onChangeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading, reversableDelete } = this.state\n\n    return (\n      <>\n        <Entries\n          isLoading={isLoading}\n          date={date}\n          onChangeEntry={onChangeEntry}\n          removeEntry={this.handleRemove}\n          feeds={feeds}\n          nappies={nappies}\n          sleeps={sleeps}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={reversableDelete !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeDeleteConfirmation}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note archived</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => this.undoDelete(reversableDelete)}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.closeDeleteConfirmation}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: undefined,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return ''\n    }\n\n    if (time === 0) {\n      return ''\n    }\n\n    const dateString = format(time, 'yyyy-MM-dd')\n    const timeString = format(time, 'HH:mm')\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <Header>\n          <Typography\n            variant=\"h1\"\n            style={{ fontSize: '2rem', marginBottom: '2.2rem' }}\n          >\n            {isEditingItem ? 'Edit' : 'Add'} an entry\n          </Typography>\n          <IconButton\n            style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n            onClick={this.handleCloseClick}\n            aria-label=\"Close\"\n          >\n            <CloseSharp />\n          </IconButton>\n        </Header>\n        <FormControl style={{ marginBottom: '2rem' }}>\n          <FormLabel>Type</FormLabel>\n          <RadioGroup\n            aria-label=\"Type\"\n            name=\"type\"\n            value={selectedInputType}\n            onChange={this.handleTypeChange}\n          >\n            <FormControlLabel\n              value={ItemTypes.Feed}\n              control={<Radio />}\n              label=\"Feed\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Nappy}\n              control={<Radio />}\n              label=\"Nappy\"\n              disabled={isEditingItem}\n            />\n            <FormControlLabel\n              value={ItemTypes.Sleep}\n              control={<Radio />}\n              label=\"Sleep\"\n              disabled={isEditingItem}\n            />\n          </RadioGroup>\n        </FormControl>\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}