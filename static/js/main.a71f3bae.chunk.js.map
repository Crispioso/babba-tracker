{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/header/Header.tsx","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/entries/Entry.tsx","components/entries/Entries.tsx","components/summary/Summary.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","components/push-notification/index.ts","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","Container","styled","Toolbar","withRouter","handleDateChange","history","formattedDate","format","push","AppBar","position","marginBottom","Typography","variant","className","DatePicker_ADatePicker","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebaseMessaging","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","onMessage","payload","console","log","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","babyName","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","subscribeByType","limit","type","key","getKeyFromType","unsubscription","collection","orderBy","onSnapshot","snapshot","docChanges","forEach","change","handleFirebaseChangeEvent","handleSubscribeError","getDataByDate","startDate","endDate","requests","map","where","getTime","get","Promise","all","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","getTimestamp","getListFromType","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","lastEdit","includesGripeWater","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","user","currentUser","set","Object","objectSpread","email","handleUpdateData","update","handleArchiveData","archived","handleUnarchiveData","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","archiveEntry","unarchiveEntry","assign","dateFormat","DeleteButton","Button","ButtonWrapper","div","TypeIconWrapper","span","isDouble","Entry","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","formatDistance","renderTitle","renderEntryDate","renderTypeIcon","renderLastEditDetails","fontSize","margin","padding","_this$props","expanded","onEdit","onRemove","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","paddingTop","Chip","label","size","marginLeft","ExpansionPanelDetails","ExpansionPanelActions","Create_default","Delete_default","Entries","isShowingUndoDelete","expandedEntryKey","handleEntryClick","onChangeEntry","removeEntry","isLoading","items","paddingBottom","fontWeight","marginTop","CircularProgress","marginRight","sort","itemA","itemB","top","zIndex","backgroundColor","entries_Entry","Wrapper","maxHoursWithoutFeed","withFirebase","interval","intervalTick","getTimeOfLatestFeed","latestFeed","b","setInterval","clearInterval","renderText","timeOfLatestFeed","lastFeedInMinutes","differenceInMinutes","lastFeedInHours","differenceInHours","differenceInMinutesMinusHours","showFeedWarning","PriorityHigh_default","InfoOutlined_default","component","isShowingDeleteConfirmation","reversableDelete","componentWillMount","startOfDay","endOfDay","componentWillReceiveProps","nextProps","nextDate","_this$props2","newUnsubscriptions","newDate","undoDelete","closeDeleteConfirmation","handleRemove","showDeleteConfirmation","_this$props3","_this$state","Paper","square","summary_Summary","entries_Entries","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","aria-label","Close_default","StyledFormControl","FormControl","defaultState","FluidOz","handleSubmit","event","preventDefault","onFinish","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","Millilitres","handleNoteChange","handleGripeWaterChange","checked","_this$state2","editableTime","inputValue","onSubmit","TextField","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","multiline","fullWidth","rowsMax","FormControlLabel","control","Checkbox","handleCheckboxChange","NappyInput_StyledFormControl","FormGroup","FormLabel","convertTimeToInputString","SleepInput_StyledFormControl","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Wrapper","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","usePublicVapidKey","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","isSameDay","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","Dialog","fullScreen","TransitionComponent","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","askForPermissionToReceiveNotifications","requestPermission","token","getToken","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","useServiceWorker","setBackgroundMessageHandler","self","showNotification","body","icon","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","blueGrey","background","default","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","document","getElementById","URL","process","href","origin"],"mappings":"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","file":"static/js/main.a71f3bae.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date | undefined => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    return\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location) || new Date()\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport 'firebase/messaging'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nexport const config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\nexport const firebaseMessaging = app.messaging()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    firebaseMessaging.onMessage(payload => {\n      console.log('Message received. ', payload)\n    })\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n  archived?: boolean\n  lastEdit?: {\n    email: string\n    time: number\n  }\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n  includesGripeWater?: boolean\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n\nexport const babyName = 'Evelyn'\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore, firebaseAuth } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByType: ({\n    limit,\n    type,\n  }: {\n    limit?: number\n    type: ItemTypes\n  }) => Array<() => void>\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  archiveEntry: (item: Items) => void\n  unarchiveEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n    > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    subscribeByType = ({\n      limit,\n      type,\n    }: {\n      limit?: number\n      type: ItemTypes\n    }) => {\n      const key = this.getKeyFromType(type)\n\n      const unsubscription = this.firestore\n        .collection(key)\n        .orderBy('time', 'desc')\n        .limit(limit || 10)\n        .onSnapshot(snapshot => {\n          snapshot\n            .docChanges()\n            .forEach(change => this.handleFirebaseChangeEvent(change))\n        }, this.handleSubscribeError)\n\n      this.unsubscriptions = [...this.unsubscriptions, unsubscription]\n      return this.unsubscriptions\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n      includesGripeWater: doc.includesGripeWater !== undefined ? doc.includesGripeWater : false,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleArchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: true,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    handleUnarchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: false,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        archiveEntry: this.handleArchiveData,\n        unarchiveEntry: this.handleUnarchiveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n        subscribeByType: this.subscribeByType,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport Chip from '@material-ui/core/Chip'\nimport { Typography } from '@material-ui/core'\nimport { Items, Sleep, ItemTypes, babyName } from '../../types'\n\ntype Props = {\n  expanded: boolean\n  item: Items\n  onClick: (id: string) => void\n  onEdit: () => void\n  onRemove: () => void\n}\n\nconst dateFormat = 'iiii do LLL'\n\n// FIXME - I should be properly styling this, not setting important\nconst DeleteButton = styled(Button)`\n  color: #fff !important;\n  background-color: rgb(220, 0, 78) !important;\n  :hover {\n    background-color: rgb(154, 0, 54) !important;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  margin-left: 0 !important;\n  margin-bottom: 1rem;\n  margin-right: 16px;\n`\n\nconst TypeIconWrapper = styled.span`\n  font-size: ${(props: { isDouble?: boolean }) =>\n    props.isDouble ? '0.5rem' : '1.3rem'};\n  margin-right: 24px;\n  display: flex;\n  align-items: center;\n`\n\nclass Entry extends React.Component<Props, {}> {\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (\n          <>\n            Drank {item.amount} {item.unit}\n          </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `Did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n          }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'h:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return <TypeIconWrapper>{'🍼'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <TypeIconWrapper>😴</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return <TypeIconWrapper isDouble>{'💩💦'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return <TypeIconWrapper>{'💩'}</TypeIconWrapper>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return <TypeIconWrapper>{'💦'}</TypeIconWrapper>\n    }\n\n    return <></>\n  }\n\n  renderLastEditDetails = (item: Items) => {\n    const { lastEdit } = item\n\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <p\n        style={{\n          color: 'rgba(0, 0, 0, 0.54)',\n          fontSize: '0.8rem',\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        Last edited by {lastEdit.email} at {format(lastEdit.time, 'p')}\n      </p>\n    )\n  }\n\n  render() {\n    const { item, expanded, onClick, onEdit, onRemove } = this.props\n\n    return (\n      <ExpansionPanel expanded={expanded} onChange={() => onClick(item.id)}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`content-${item.id}`}\n          id={`header-${item.id}`}\n        >\n          {this.renderTypeIcon(item)}\n          <div>\n            <Typography variant=\"body1\">{this.renderTitle(item)}</Typography>\n            <Typography\n              variant=\"body2\"\n              style={{ paddingTop: '2px', color: 'rgba(0, 0, 0, 0.54)' }}\n            >\n              {this.renderEntryDate(item)}\n            </Typography>\n          </div>\n          {item.note !== undefined && item.note !== '' && (\n            <Chip label=\"note\" size=\"small\" style={{ marginLeft: '1rem' }} />\n          )}\n          {item.type === ItemTypes.Feed && item.includesGripeWater !== undefined && item.includesGripeWater && (\n            <Chip label=\"gripe water\" color=\"secondary\" size=\"small\" style={{ marginLeft: '1rem' }} />\n          )}\n        </ExpansionPanelSummary>\n        {item.note !== undefined && item.note !== '' && (\n          <ExpansionPanelDetails>\n            <Typography variant=\"body1\">{item.note}</Typography>\n          </ExpansionPanelDetails>\n        )}\n        <ExpansionPanelDetails>\n          {this.renderLastEditDetails(item)}\n        </ExpansionPanelDetails>\n        <ExpansionPanelActions>\n          <ButtonWrapper>\n            <Button variant=\"contained\" color=\"default\" onClick={onEdit}>\n              Edit\n              <CreateIcon style={{ marginLeft: '1rem' }} />\n            </Button>\n          </ButtonWrapper>\n          <ButtonWrapper>\n            <DeleteButton\n              variant=\"contained\"\n              color=\"default\"\n              onClick={onRemove}\n            >\n              Delete\n              <DeleteIcon style={{ marginLeft: '1rem' }} />\n            </DeleteButton>\n          </ButtonWrapper>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    )\n  }\n}\n\nexport default Entry\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep } from '../../types'\nimport Entry from './Entry'\nimport { format } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\ntype State = {\n  isShowingUndoDelete: boolean\n  expandedEntryKey?: string\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  state: State = {\n    isShowingUndoDelete: false,\n    expandedEntryKey: undefined,\n  }\n\n  handleEntryClick = (id: string) => {\n    const { expandedEntryKey } = this.state\n\n    if (expandedEntryKey === id) {\n      this.setState({ expandedEntryKey: undefined })\n      return\n    }\n\n    this.setState({ expandedEntryKey: id })\n  }\n\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  render() {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n    const { expandedEntryKey } = this.state\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{\n            fontSize: '1rem',\n            paddingTop: '1.5rem',\n            paddingBottom: '1rem',\n            fontWeight: 500,\n            position: 'sticky',\n            top: '0',\n            zIndex: 1,\n            color: 'rgba(0, 0, 0, 0.54)',\n            backgroundColor: '#f5f5f5',\n          }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <div style={{ marginBottom: '104px' }}>\n          {items.map(item => (\n            <Entry\n              key={item.id}\n              expanded={\n                expandedEntryKey !== undefined && expandedEntryKey === item.id\n              }\n              item={item}\n              onClick={this.handleEntryClick}\n              onEdit={() => onChangeEntry(item)}\n              onRemove={() => removeEntry(item)}\n            />\n          ))}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport PriorityIcon from '@material-ui/icons/PriorityHigh'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { differenceInHours, differenceInMinutes } from 'date-fns'\nimport { ItemTypes } from '../../types'\n\ntype Props = FirebaseFunctionProps & FirebaseData\n\ntype State = {\n  time: number\n}\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  padding: 1rem 0rem;\n  margin: 1rem;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n  align-items: center;\n`\n\nconst maxHoursWithoutFeed = 4\n\nclass Summary extends React.Component<Props, State> {\n  interval: number = 0\n  state: State = {\n    time: new Date().getTime(),\n  }\n\n  componentDidMount() {\n    const { subscribeByType } = this.props\n    subscribeByType({ limit: 1, type: ItemTypes.Feed })\n\n    this.interval = setInterval(this.intervalTick, 30 * 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  intervalTick = () => {\n    this.setState({\n      time: new Date().getTime(),\n    })\n  }\n\n  getTimeOfLatestFeed = (): number => {\n    const { feeds } = this.props\n\n    if (feeds.length === 1) {\n      return feeds[0].time\n    }\n\n    const feedsInDateOrder = feeds.sort((a, b) => a.time - b.time)\n    const latestFeed = feedsInDateOrder[feeds.length - 1]\n\n    if (latestFeed == null) {\n      return 0\n    }\n\n    return latestFeed.time\n  }\n\n  renderText(timeOfLatestFeed: number) {\n    const lastFeedInMinutes = differenceInMinutes(new Date(), timeOfLatestFeed)\n    const lastFeedInHours = differenceInHours(new Date(), timeOfLatestFeed)\n    const numberOfMinutesConvertedToHours = 60 * lastFeedInHours\n    const differenceInMinutesMinusHours =\n      lastFeedInMinutes - numberOfMinutesConvertedToHours\n\n    if (lastFeedInMinutes === 0) {\n      return <>Evelyn just ate</>\n    }\n\n    return (\n      <>\n        Last ate{' '}\n        <b>\n          {lastFeedInHours !== 0 &&\n            `${lastFeedInHours} hour${lastFeedInHours > 1 ? 's' : ''} `}\n          {differenceInMinutesMinusHours} minute\n          {differenceInMinutesMinusHours > 1 ? 's' : ''} ago\n        </b>\n      </>\n    )\n  }\n\n  render() {\n    const { time } = this.state\n    const timeOfLatestFeed = this.getTimeOfLatestFeed()\n    const showFeedWarning =\n      differenceInHours(timeOfLatestFeed, new Date().getTime()) <=\n      -maxHoursWithoutFeed\n\n    if (timeOfLatestFeed === 0) {\n      return null\n    }\n\n    return (\n      <Wrapper key={time}>\n        {showFeedWarning ? (\n          <PriorityIcon color=\"error\" fontSize=\"large\" />\n        ) : (\n          <InfoIcon color=\"secondary\" fontSize=\"large\" />\n        )}\n        <Typography\n          variant=\"body1\"\n          component=\"p\"\n          style={{ marginLeft: '1rem' }}\n        >\n          {this.renderText(timeOfLatestFeed)}\n        </Typography>\n      </Wrapper>\n    )\n  }\n}\n\nexport default withFirebase()(Summary)\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\nimport { Paper } from '@material-ui/core'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n  isShowingDeleteConfirmation: boolean\n  reversableDelete?: Items\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n    isShowingDeleteConfirmation: false,\n    reversableDelete: undefined,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location) || new Date()\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location) || new Date()\n    const nextDate = getDateFromLocation(location) || new Date()\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  undoDelete = (item?: Items) => {\n    this.closeDeleteConfirmation()\n    if (item !== undefined) {\n      this.props.unarchiveEntry(item)\n    }\n  }\n\n  handleRemove = (item: Items) => {\n    this.showDeleteConfirmation(item)\n    this.props.archiveEntry(item)\n  }\n\n  showDeleteConfirmation = (item: Items) =>\n    this.setState({ reversableDelete: item })\n\n  closeDeleteConfirmation = () => this.setState({ reversableDelete: undefined })\n\n  render() {\n    const { onChangeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading, reversableDelete } = this.state\n\n    return (\n      <>\n        <Paper square={true}>\n          <Summary />\n        </Paper>\n        <Entries\n          isLoading={isLoading}\n          date={date}\n          onChangeEntry={onChangeEntry}\n          removeEntry={this.handleRemove}\n          feeds={feeds}\n          nappies={nappies}\n          sleeps={sleeps}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={reversableDelete !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeDeleteConfirmation}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note archived</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => this.undoDelete(reversableDelete)}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.closeDeleteConfirmation}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  Checkbox,\n  FormControlLabel,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n  includesGripeWater?: boolean\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.FluidOz,\n  note: '',\n  time: undefined,\n  includesGripeWater: false,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time, includesGripeWater } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n        includesGripeWater,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n      includesGripeWater,\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  handleGripeWaterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = event.currentTarget\n\n    this.setState({ includesGripeWater: checked })\n  }\n\n  render() {\n    const { amount, unit, note, time, error, includesGripeWater } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={includesGripeWater}\n                onChange={this.handleGripeWaterChange}\n                id=\"includes-gripe-water-input\"\n                value={includesGripeWater}\n              />\n            }\n            label=\"Includes gripe water\"\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return ''\n    }\n\n    if (time === 0) {\n      return ''\n    }\n\n    const dateString = format(time, 'yyyy-MM-dd')\n    const timeString = format(time, 'HH:mm')\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  renderLastEditDetails = () => {\n    const { item } = this.props\n    if (item === undefined) {\n      return\n    }\n\n    const { lastEdit } = item\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Last edited by {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </Typography>\n    )\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <div style={{ marginBottom: '2.2rem' }}>\n          <Header>\n            <Typography\n              variant=\"h1\"\n              style={{ fontSize: '2rem', marginBottom: '0.5rem' }}\n              display=\"block\"\n            >\n              {isEditingItem ? 'Edit' : 'Add'} an entry\n            </Typography>\n            <IconButton\n              style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n              onClick={this.handleCloseClick}\n              aria-label=\"Close\"\n            >\n              <CloseSharp />\n            </IconButton>\n          </Header>\n        </div>\n        {!isEditingItem && (\n          <FormControl style={{ marginBottom: '2rem' }}>\n            <FormLabel>Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Type\"\n              name=\"type\"\n              value={selectedInputType}\n              onChange={this.handleTypeChange}\n            >\n              <FormControlLabel\n                value={ItemTypes.Feed}\n                control={<Radio />}\n                label=\"Feed\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Nappy}\n                control={<Radio />}\n                label=\"Nappy\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Sleep}\n                control={<Radio />}\n                label=\"Sleep\"\n                disabled={isEditingItem}\n              />\n            </RadioGroup>\n          </FormControl>\n        )}\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth, firebaseMessaging } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { isSameDay } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { getDateFromLocation } from './utils'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\ntype Props = RouteComponentProps\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n    const date = getDateFromLocation(location)\n    if (date !== undefined && isSameDay(date, new Date())) {\n      history.replace('/')\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentDidMount = () => {\n    firebaseMessaging.usePublicVapidKey('BOkyItM60bXMsTT3mm1m1_5zv0L3RXvPC98aw52WXHnv6hLHIhcRXFffuEulEZmDqj_mFhTeZ1Bzu72v0UOVAH8')\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const { history, location } = nextProps\n    const date = getDateFromLocation(location)\n    if (date !== undefined && isSameDay(date, new Date())) {\n      history.replace('/')\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","import { firebaseMessaging } from '../firebase/Firebase'\n\nexport const askForPermissionToReceiveNotifications = async () => {\n  try {\n    await firebaseMessaging.requestPermission()\n    const token = await firebaseMessaging.getToken()\n    console.log('Push notification token:', token)\n\n    return token\n  } catch (error) {\n    console.error('Error requesting permission for push notifications', error)\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nimport { firebaseMessaging } from './components/firebase/Firebase'\nimport { askForPermissionToReceiveNotifications } from './components/push-notification'\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      // if (isLocalhost) {\n      //   // This is running on localhost. Let's check if a service worker still exists or not.\n      //   checkValidServiceWorker(swUrl, config)\n\n      //   // Add some additional logging to localhost, pointing developers to the\n      //   // service worker/PWA documentation.\n      //   navigator.serviceWorker.ready.then(() => {\n      //     console.log(\n      //       'This web app is being served cache-first by a service ' +\n      //         'worker. To learn more, visit http://bit.ly/CRA-PWA',\n      //     )\n      //   })\n      // } else {\n      // Is not localhost. Just register service worker\n      registerValidSW(swUrl, config)\n      // }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      firebaseMessaging.useServiceWorker(registration)\n      askForPermissionToReceiveNotifications()\n\n      firebaseMessaging.getToken().then((token) => {\n        console.log(token)\n      })\n\n      firebaseMessaging.setBackgroundMessageHandler(payload => {\n        console.log(\n          '[firebase-messaging-sw.js] Received background message ',\n          payload,\n        )\n        // Customize notification here\n        const notificationTitle = 'Background Message Title'\n        const notificationOptions = {\n          body: 'Background Message body.',\n          icon: 'https://crispioso.github.io/babba-tracker/babba-512.png',\n        }\n\n        // @ts-ignore\n        return window.self.registration.showNotification(\n          notificationTitle,\n          notificationOptions,\n        )\n      })\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { askForPermissionToReceiveNotifications } from './components/push-notification'\nimport { firebaseMessaging } from './components/firebase/Firebase'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}