{"version":3,"sources":["components/date-picker/DatePicker.tsx","utils.ts","components/firebase/Firebase.tsx","types.ts","components/firebase/withFirebase.tsx","components/summary/Summary.tsx","components/header/Header.tsx","components/entries/Entries.tsx","components/entries/EntriesController.tsx","components/entry-input/FeedInput.tsx","components/entry-input/NappyInput.tsx","components/entry-input/SleepInput.tsx","components/entry-input/EntryInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FakeInput","react","style","display","ADatePicker","React","[object Object]","args","super","this","dateInput","handleChange","date","props","onChange","openCalendar","current","open","closeCalendar","setState","calendarIsOpen","render","value","IconButton","onClick","color","CalendarToday_default","a","material_ui_pickers_esm","ref","TextFieldComponent","autoOk","showTodayButton","getDateFromLocation","location","search","queryString","parse","Array","Date","firebase","app","firestore","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","firebase_Firebase","constructor","feeds","nappies","sleeps","isInitialised","initialise","async","console","warn","getFeeds","getNappies","getSleeps","ItemTypes","Units","DataKeys","dataKeysList","Feeds","Nappies","Sleeps","wrapWithFirebaseComponent","ChildComponent","state","Firebase","unsubscriptions","getDataByDate","startDate","endDate","requests","map","key","collection","where","getTime","orderBy","get","Promise","all","forEach","response","docs","doc","docAlreadyExists","addDataReducer","id","data","error","subscribeByDate","subscription","onSnapshot","snapshot","docChanges","change","handleFirebaseChangeEvent","handleSubscribeError","push","getTimestamp","getListFromType","type","some","item","mapEventFeedDataToItem","ID","Feed","amount","unit","note","time","undefined","lastEdit","mapEventNappyDataToItem","Nappy","isPoop","isWee","mapEventSleepDataToItem","Sleep","endTime","handleAddData","user","currentUser","getKeyFromType","set","Object","objectSpread","email","handleUpdateData","update","handleArchiveData","archived","handleUnarchiveData","componentDidMount","Error","componentWillUnmount","length","feed","nappy","sleep","updateDataReducer","removeDataReducer","filter","dataFunctions","addEntry","updateEntry","archiveEntry","unarchiveEntry","assign","Wrapper","styled","div","withFirebase","getTimeOfLatestFeed","latestFeed","startOfDay","endOfDay","timeOfLatestFeed","Typography","variant","component","formatDistance","Container","Toolbar","withRouter","handleDateChange","history","formattedDate","format","AppBar","position","marginBottom","className","DatePicker_ADatePicker","summary_Summary","dateFormat","babyName","Entries","isShowingUndoDelete","renderDate","localDate","convertToLocalTime","timeZone","renderSleepingTitle","renderTitle","renderEntryDate","renderTypeIcon","fontSize","renderLastEditDetails","marginLeft","renderSortedEntries","_this$props","onChangeEntry","removeEntry","isLoading","items","paddingTop","paddingBottom","fontWeight","marginTop","CircularProgress","marginRight","sort","itemA","itemB","top","zIndex","backgroundColor","List","index","ListItem","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","aria-label","Create_default","Delete_default","Divider","isShowingDeleteConfirmation","reversableDelete","componentWillMount","componentWillReceiveProps","nextProps","nextDate","_this$props2","unsubscription","newUnsubscriptions","newDate","undoDelete","closeDeleteConfirmation","handleRemove","showDeleteConfirmation","_this$props3","_this$state","entries_Entries","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","Button","size","Close_default","StyledFormControl","FormControl","defaultState","Millilitres","handleSubmit","event","preventDefault","onFinish","uuid","handleClear","currentTarget","handleAmountChange","handleUnitChange","FluidOz","handleNoteChange","_this$state2","editableTime","inputValue","onSubmit","TextField","label","InputLabelProps","shrink","required","InputLabel","htmlFor","Input","width","FormHelperText","SelectProps","native","select","multiline","fullWidth","rowsMax","handleCheckboxChange","checked","NappyInput_StyledFormControl","FormGroup","FormLabel","FormControlLabel","control","Checkbox","convertTimeToInputString","SleepInput_StyledFormControl","Header","EntryInput","selectedInputType","isEditingItem","handleTypeChange","handleCloseClick","renderInput","entry_input_FeedInput","NappyInput","entry_input_SleepInput","EntryInput_Wrapper","EntryInput_Header","right","CloseSharp","RadioGroup","name","Radio","disabled","TransitionUp","react_default","createElement","Slide","direction","Body","today","Component","isInitialisingFirebase","isInputtingEntry","isSignedIn","entryBeingEdited","signInConfig","unregisterAuthObserver","handleAddEntry","handleChangeEntry","handleFinishAdding","handleFinishEditing","window","addEventListener","log","parseQuery","replace","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","Dialog","fullScreen","TransitionComponent","entry_input_EntryInput","entries_EntriesController","Fab","bottom","classes","Add_default","StyledFirebaseAuth_default","uiConfig","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","light","purple","main","dark","blueGrey","background","default","UnknownRoute","ReactDOM","react_router_dom","basename","utils","DateFnsUtils","MuiThemeProvider","CssBaseline","header_Header","react_router","exact","path","src_App","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.58133b54.chunk.js","sourcesContent":["import * as React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport CalendarToday from '@material-ui/icons/CalendarToday'\nimport { DatePicker as MaterialDatePicker } from 'material-ui-pickers'\n\ninterface Props {\n  value: Date\n  onChange: (date: Date) => void\n}\n\nconst FakeInput = () => <span style={{ display: 'none' }} />\n\nexport default class ADatePicker extends React.Component<Props, {}> {\n  dateInput = React.createRef<HTMLDivElement>()\n\n  handleChange = (date: Date) => {\n    this.props.onChange(date)\n  }\n\n  openCalendar = () => {\n    if (this.dateInput.current != null) {\n      // I don't know why TypeScript thinks that `open()` doesn't exist on the Ref and I've got bored of trying\n      // to work it out. So I'm telling TS to ignore it for now (tut tut).\n\n      // @ts-ignore\n      this.dateInput.current.open()\n    }\n  }\n\n  closeCalendar = () => {\n    this.setState({ calendarIsOpen: false })\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <>\n        <IconButton onClick={() => this.openCalendar()} color=\"inherit\">\n          <CalendarToday />\n        </IconButton>\n        <MaterialDatePicker\n          onChange={this.handleChange}\n          value={value}\n          ref={this.dateInput}\n          TextFieldComponent={FakeInput}\n          autoOk={true}\n          showTodayButton={true}\n        />\n      </>\n    )\n  }\n}\n","import queryString from 'query-string'\nimport { Location } from 'history'\n\nexport const getDateFromLocation = (location: Location): Date => {\n  const { search } = location\n  let { date } = queryString.parse(search)\n\n  if (date == null) {\n    date = \"\"\n  }\n\n  if (date instanceof Array) {\n    date = date[0]\n  }\n\n  return new Date(date)\n}\n","import * as app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/database'\nimport { FirebaseConfig } from './types'\nimport { Feed, Nappy, Sleep } from '../../types'\n\nexport interface FirebaseProps {\n  firestore: firebase.firestore.Firestore\n  database: firebase.database.Database\n}\n\nconst config: FirebaseConfig = {\n  apiKey: 'AIzaSyCLtPtjhDedOYHLfrOZ_yVvMWjL2hFgDO0',\n  authDomain: 'babba-68803.firebaseapp.com',\n  databaseURL: 'https://babba-68803.firebaseio.com',\n  projectId: 'babba-68803',\n  storageBucket: 'babba-68803.appspot.com',\n  messagingSenderId: '831726193262',\n}\n\n// const config: FirebaseConfig = {\n//   apiKey: process.env.FIREBASE_API_KEY || '',\n//   authDomain: process.env.FIREBASE_AUTH_DOMAIN || '',\n//   databaseURL: process.env.FIREBASE_DATABASE_URL || '',\n//   projectId: process.env.FIREBASE_PROJECT_ID || '',\n//   storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '',\n//   messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '',\n// }\n\nexport const firebase = app\nexport const firebaseApp = app.initializeApp(config)\nexport const firebaseDB = app.database()\nexport const firestore = app.firestore()\nexport const firebaseAuth = app.auth()\n\nclass Firebase {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isInitialised: boolean\n\n  constructor() {\n    this.feeds = []\n    this.nappies = []\n    this.sleeps = []\n    this.isInitialised = false\n  }\n\n  initialise = async () => {\n    if (this.isInitialised) {\n      console.warn('Attempt to re-initialise firebase class, already done')\n      return\n    }\n\n    // Do anything with Firebase that I want to be available before anything tries to use this Firebase class\n    this.isInitialised = true\n    return { feeds: this.feeds, nappies: this.nappies, sleeps: this.sleeps }\n  }\n\n  getFeeds = () => [...this.feeds]\n  getNappies = () => [...this.nappies]\n  getSleeps = () => [...this.sleeps]\n}\n\nexport default new Firebase()\n","export type ValueOf<T> = T[keyof T]\n\nexport interface Item {\n  id: string\n  type: ItemTypes\n  time: number\n  note?: string\n  user?: string\n  archived?: boolean\n  lastEdit?: {\n    email: string\n    time: number\n  }\n}\n\nexport enum ItemTypes {\n  Feed = 'feed',\n  Nappy = 'nappy',\n  Sleep = 'sleep',\n}\n\nexport enum Units {\n  Millilitres = 'ml',\n  FluidOz = 'fl oz',\n}\n\nexport interface Feed extends Item {\n  type: ItemTypes.Feed\n  amount: string\n  unit: Units\n}\n\nexport interface Nappy extends Item {\n  type: ItemTypes.Nappy\n  isPoop: boolean\n  isWee: boolean\n}\n\nexport interface Sleep extends Item {\n  type: ItemTypes.Sleep\n  endTime?: number\n}\n\nexport type Items = Feed | Nappy | Sleep\n","import * as React from 'react'\nimport firebase from 'firebase'\nimport Firebase, { firestore, firebaseAuth } from './Firebase'\nimport { Feed, Items, ItemTypes, Nappy, Sleep } from '../../types'\n\nexport enum DataKeys {\n  Feeds = 'feeds',\n  Nappies = 'nappies',\n  Sleeps = 'sleeps',\n}\n\nexport type FirebaseData = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nexport interface FirebaseFunctionProps {\n  subscribeByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Array<() => void>\n  getDataByDate: ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Date\n    endDate: Date\n  }) => Promise<void>\n  addEntry: (item: Items) => void\n  updateEntry: (item: Items) => void\n  archiveEntry: (item: Items) => void\n  unarchiveEntry: (item: Items) => void\n}\n\nexport type State = {\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n}\n\nconst dataKeysList = [DataKeys.Feeds, DataKeys.Nappies, DataKeys.Sleeps]\n\nconst wrapWithFirebaseComponent = () => <TChildComponentProps extends {}>(\n  ChildComponent: React.ComponentType<\n    TChildComponentProps & FirebaseFunctionProps & FirebaseData\n  >,\n) => {\n  return class ConnectFirebaseToComponent extends React.Component<\n    TChildComponentProps,\n    State\n  > {\n    state: State = {\n      feeds: Firebase.getFeeds(),\n      nappies: Firebase.getNappies(),\n      sleeps: Firebase.getSleeps(),\n    }\n    firestore = firestore\n    unsubscriptions: Array<() => void> = []\n\n    componentDidMount() {\n      if (!Firebase.isInitialised) {\n        throw Error(\n          'Attempt to render component with Firebase wrapper before Firebase has been initialised',\n        )\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscriptions.length === 0) {\n        return\n      }\n      this.unsubscriptions.forEach(subscription => subscription())\n    }\n\n    getDataByDate = async ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const requests = dataKeysList.map(key => {\n        return this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .get()\n      })\n      try {\n        const responses = await Promise.all(requests)\n        responses.forEach(response =>\n          response.docs.forEach(doc => {\n            if (this.docAlreadyExists(doc)) return\n            this.setState((state: State) =>\n              this.addDataReducer(doc.id, doc.data(), state),\n            )\n          }),\n        )\n      } catch (error) {\n        console.error('Error getting data by date', error)\n      }\n    }\n\n    subscribeByDate = ({\n      startDate,\n      endDate,\n    }: {\n      startDate: Date\n      endDate: Date\n    }) => {\n      const unsubscriptions: Array<() => void> = []\n\n      this.setState({ feeds: [], nappies: [], sleeps: [] })\n      dataKeysList.map(key => {\n        const subscription = this.firestore\n          .collection(key)\n          .where('time', '>', startDate.getTime())\n          .where(\n            'time',\n            '<',\n            endDate ? endDate.getTime() : new Date().getTime(),\n          )\n          .where('archived', '==', false)\n          .orderBy('time', 'desc')\n          .onSnapshot(snapshot => {\n            snapshot\n              .docChanges()\n              .forEach(change => this.handleFirebaseChangeEvent(change))\n          }, this.handleSubscribeError)\n\n        unsubscriptions.push(subscription)\n      })\n      this.unsubscriptions = [...this.unsubscriptions, ...unsubscriptions]\n      return unsubscriptions\n    }\n\n    handleSubscribeError = (error: Error) => {\n      console.error('Error getting snapshot from subscription', error)\n    }\n\n    getTimestamp = (): number => {\n      return new Date().getTime()\n    }\n\n    docAlreadyExists = (doc: firebase.firestore.DocumentData) => {\n      // On initial load this gets all existing documents but we already get them in one batch, so this\n      // ends up duplicating them. Which is why we have this check.\n      const items = this.getListFromType(doc.data().type)\n      return items.some((item: Items) => item.id === doc.id)\n    }\n\n    mapEventFeedDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Feed => ({\n      id: ID,\n      type: ItemTypes.Feed,\n      amount: doc.amount != null ? doc.amount : '',\n      unit: doc.unit != null ? doc.unit : '',\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventNappyDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Nappy => ({\n      id: ID,\n      type: ItemTypes.Nappy,\n      isPoop: doc.isPoop,\n      isWee: doc.isWee,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    mapEventSleepDataToItem = (\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n    ): Sleep => ({\n      id: ID,\n      type: ItemTypes.Sleep,\n      endTime: doc.endTime,\n      note: doc.note,\n      time: doc.time != null ? doc.time : undefined,\n      lastEdit: doc.lastEdit !== undefined ? doc.lastEdit : undefined,\n    })\n\n    addDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: [...feeds, feed],\n          nappies: nappies,\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: [...nappies, nappy],\n          sleeps: sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds: feeds,\n          nappies: nappies,\n          sleeps: [...sleeps, sleep],\n        }\n      }\n\n      console.error('Unrecognised doc type added to firebase:', doc.type)\n      return { feeds, nappies, sleeps }\n    }\n\n    updateDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        const feed: Feed = this.mapEventFeedDataToItem(ID, doc)\n        return {\n          feeds: feeds.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return feed\n          }),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        const nappy: Nappy = this.mapEventNappyDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return nappy\n          }),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        const sleep: Sleep = this.mapEventSleepDataToItem(ID, doc)\n        return {\n          feeds,\n          nappies: nappies,\n          sleeps: sleeps.map(item => {\n            if (item.id != ID) {\n              return item\n            }\n            return sleep\n          }),\n        }\n      }\n\n      console.error('Unrecognised doc type updated in firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    removeDataReducer(\n      ID: string,\n      doc: firebase.firestore.DocumentData,\n      state: State,\n    ) {\n      const { feeds, nappies, sleeps } = state\n\n      if (doc.type == ItemTypes.Feed) {\n        return {\n          feeds: feeds.filter(item => item.id != ID),\n          nappies,\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Nappy) {\n        return {\n          feeds,\n          nappies: nappies.filter(item => item.id != ID),\n          sleeps,\n        }\n      }\n\n      if (doc.type == ItemTypes.Sleep) {\n        return {\n          feeds,\n          nappies,\n          sleeps: sleeps.filter(item => item.id != ID),\n        }\n      }\n\n      console.error('Unrecognised doc type removed from firebase')\n      return { feeds, nappies, sleeps }\n    }\n\n    getKeyFromType(type: ItemTypes): string {\n      switch (type) {\n        case ItemTypes.Feed:\n          return DataKeys.Feeds\n        case ItemTypes.Nappy:\n          return DataKeys.Nappies\n        case ItemTypes.Sleep:\n          return DataKeys.Sleeps\n        default:\n          return 'unknown_type'\n      }\n    }\n\n    getListFromType(type: ItemTypes): Items[] {\n      switch (type) {\n        case ItemTypes.Feed:\n          return this.state[DataKeys.Feeds]\n        case ItemTypes.Nappy:\n          return this.state[DataKeys.Nappies]\n        case ItemTypes.Sleep:\n          return this.state[DataKeys.Sleeps]\n        default:\n          return []\n      }\n    }\n\n    handleFirebaseChangeEvent(change: firebase.firestore.DocumentChange) {\n      switch (change.type) {\n        case 'added':\n          if (this.docAlreadyExists(change.doc)) return\n          this.setState((state: State) =>\n            this.addDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'modified':\n          this.setState((state: State) =>\n            this.updateDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        case 'removed':\n          this.setState((state: State) =>\n            this.removeDataReducer(change.doc.id, change.doc.data(), state),\n          )\n          break\n        default:\n          console.error(\n            'Unrecognised firebase document change type: ',\n            change.type,\n          )\n          break\n      }\n    }\n\n    handleAddData = (item: Items) => {\n      if (item.time == undefined || !item.time) {\n        item.time = this.getTimestamp()\n      }\n\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .set({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error adding Firebase data', error, item)\n      }\n    }\n\n    handleUpdateData = async (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error updating Firebase data', error, item)\n      }\n    }\n\n    handleArchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: true,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    handleUnarchiveData = (item: Items) => {\n      const user = firebaseAuth.currentUser\n      try {\n        this.firestore\n          .collection(this.getKeyFromType(item.type))\n          .doc(item.id)\n          .update({\n            ...item,\n            archived: false,\n            lastEdit: {\n              email: user ? user.email : '',\n              time: new Date().getTime(),\n            },\n          })\n      } catch (error) {\n        console.error('Error removing Firebase data', error, item)\n      }\n    }\n\n    render() {\n      const dataFunctions: FirebaseFunctionProps = {\n        addEntry: this.handleAddData,\n        updateEntry: this.handleUpdateData,\n        archiveEntry: this.handleArchiveData,\n        unarchiveEntry: this.handleUnarchiveData,\n        subscribeByDate: this.subscribeByDate,\n        getDataByDate: this.getDataByDate,\n      }\n      return (\n        <ChildComponent {...dataFunctions} {...this.props} {...this.state} />\n      )\n    }\n  }\n}\n\nexport default wrapWithFirebaseComponent\n","import * as React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { startOfDay, endOfDay, formatDistance } from 'date-fns'\nimport { Feed } from '../../types'\n\ntype Props = FirebaseFunctionProps & FirebaseData\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  padding: 1rem;\n  margin: 1rem 1rem 1.5rem 1rem;\n  color: rgba(0, 0, 0, 0.87);\n`\n\nclass Summary extends React.Component<Props, {}> {\n  componentDidMount() {\n    const { subscribeByDate } = this.props\n    subscribeByDate({\n      startDate: startOfDay(new Date()),\n      endDate: endOfDay(new Date()),\n    })\n  }\n\n  getTimeOfLatestFeed = (): number => {\n    const { feeds } = this.props\n    const latestFeed = feeds[0]\n\n    if (latestFeed == null) {\n      return 0\n    }\n\n    return latestFeed.time\n  }\n\n  render() {\n    const timeOfLatestFeed = this.getTimeOfLatestFeed()\n\n    if (timeOfLatestFeed === 0) {\n      return null\n    }\n\n    return (\n      <Wrapper>\n        <Typography variant=\"body1\" component=\"p\">\n          Last ate {formatDistance(timeOfLatestFeed, new Date().getTime())} ago\n        </Typography>\n      </Wrapper>\n    )\n  }\n}\n\nexport default withFirebase()(Summary)\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport styled from 'styled-components'\nimport { Typography, Toolbar } from '@material-ui/core'\nimport DatePicker from '../date-picker/DatePicker'\nimport { format } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\nimport Summary from '../summary/Summary'\n\nconst Container = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`\n\nclass Header extends React.Component<RouteComponentProps, {}> {\n  handleDateChange = (date: Date) => {\n    const { history } = this.props\n    const formattedDate = format(date, 'yyyy-MM-dd')\n    history.push(`?date=${formattedDate}`)\n  }\n\n  render() {\n    const { location } = this.props\n    const date = getDateFromLocation(location)\n\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"primary\"\n        style={{ marginBottom: '0.5rem' }}\n      >\n        <Container>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"alignRight\">\n            Babba tracker\n          </Typography>\n          <DatePicker value={date} onChange={this.handleDateChange} />\n        </Container>\n        <Summary />\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import * as React from 'react'\nimport { Feed, Items, Nappy, Sleep, ItemTypes } from '../../types'\nimport { format, formatDistance } from 'date-fns'\nimport { convertToLocalTime } from 'date-fns-timezone'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CreateIcon from '@material-ui/icons/Create'\nimport { Typography, Paper } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ntype Props = {\n  onChangeEntry: (item: Items) => void\n  removeEntry: (item: Items) => void\n  date: Date\n  feeds: Feed[]\n  nappies: Nappy[]\n  sleeps: Sleep[]\n  isLoading: boolean\n}\n\ntype State = {\n  isShowingUndoDelete: boolean\n}\n\nconst dateFormat = 'iiii do LLL'\nconst babyName = 'Evelyn'\n\nclass Entries extends React.Component<Props, {}> {\n  state: State = {\n    isShowingUndoDelete: false,\n  }\n\n  renderDate = (date: Date): string => {\n    const localDate = convertToLocalTime(date, { timeZone: 'Europe/London' })\n    return format(localDate, dateFormat)\n  }\n\n  renderSleepingTitle = (sleep: Sleep) => {\n    if (sleep.endTime == null || sleep.endTime === 0) {\n      return `${babyName} is sleeping...`\n    }\n\n    return `${babyName} slept for ${formatDistance(sleep.time, sleep.endTime)}`\n  }\n\n  renderTitle = (item: Items) => {\n    switch (item.type) {\n      case ItemTypes.Feed: {\n        return (\n          <>\n            {babyName} drank {item.amount} {item.unit}\n            {item.amount === '1' ? 's' : ''}\n          </>\n        )\n      }\n      case ItemTypes.Nappy: {\n        return `${babyName} did a ${item.isWee ? 'wee' : ''}${\n          item.isWee && item.isPoop ? ' and a ' : ''\n        }${item.isPoop ? 'poop' : ''}`\n      }\n      case ItemTypes.Sleep: {\n        return this.renderSleepingTitle(item)\n      }\n      default: {\n        return 'Unrecognised item 🤔'\n      }\n    }\n  }\n\n  renderEntryDate = (item: Items) => {\n    if (item.time == null) {\n      return\n    }\n    return <>{format(new Date(item.time), 'h:mm a ')}</>\n  }\n\n  renderTypeIcon = (item: Items) => {\n    if (item.type === ItemTypes.Feed) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'🍼'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Sleep) {\n      return <span style={{ fontSize: '1.5rem', color: 'initial' }}>😴</span>\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop && item.isWee) {\n      return (\n        <span style={{ fontSize: '0.6rem', color: 'initial' }}>{'💩💦'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isPoop) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💩'}</span>\n      )\n    }\n\n    if (item.type === ItemTypes.Nappy && item.isWee) {\n      return (\n        <span style={{ fontSize: '1.5rem', color: 'initial' }}>{'💦'}</span>\n      )\n    }\n\n    return <></>\n  }\n\n  renderLastEditDetails = (item: Items) => {\n    const { lastEdit } = item\n\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <span style={{ marginLeft: '1rem' }}>\n        {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </span>\n    )\n  }\n\n  renderSortedEntries = () => {\n    const {\n      nappies,\n      feeds,\n      sleeps,\n      date,\n      onChangeEntry,\n      removeEntry,\n      isLoading,\n    } = this.props\n    const items = [...nappies, ...feeds, ...sleeps]\n\n    if (isLoading) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '5rem',\n            }}\n          >\n            <CircularProgress\n              style={{ marginRight: 'auto', marginLeft: 'auto' }}\n            />\n          </div>\n        </>\n      )\n    }\n\n    if (items.length === 0) {\n      return (\n        <>\n          <Typography\n            style={{\n              fontSize: '1rem',\n              paddingTop: '1.5rem',\n              paddingBottom: '3rem',\n              fontWeight: 500,\n              color: 'rgba(0, 0, 0, 0.54)',\n            }}\n            variant=\"h2\"\n          >\n            {this.renderDate(date)}\n          </Typography>\n          <Typography style={{ fontSize: '1.5rem' }} variant=\"h3\">\n            Nothing today\n          </Typography>\n        </>\n      )\n    }\n\n    items.sort((itemA, itemB) => itemA.time - itemB.time)\n    return (\n      <>\n        <Typography\n          style={{\n            fontSize: '1rem',\n            paddingTop: '1.5rem',\n            paddingBottom: '1rem',\n            fontWeight: 500,\n            position: 'sticky',\n            top: '0',\n            zIndex: 1,\n            color: 'rgba(0, 0, 0, 0.54)',\n            backgroundColor: '#f5f5f5',\n          }}\n          variant=\"h2\"\n        >\n          {this.renderDate(date)}\n        </Typography>\n        <div style={{ marginBottom: '104px', backgroundColor: '#fff' }}>\n          <List>\n            {items.map((item, index) => (\n              <div key={item.id}>\n                <ListItem>\n                  <ListItemIcon>{this.renderTypeIcon(item)}</ListItemIcon>\n                  <ListItemText\n                    primary={this.renderTitle(item)}\n                    secondary={this.renderEntryDate(item)}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      onClick={() => onChangeEntry(item)}\n                      aria-label=\"Edit\"\n                    >\n                      <CreateIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => removeEntry(item)}\n                      aria-label=\"Delete\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index + 1 < items.length && <Divider variant=\"middle\" />}\n              </div>\n            ))}\n          </List>\n        </div>\n      </>\n    )\n  }\n\n  render() {\n    return this.renderSortedEntries()\n  }\n}\n\nexport default Entries\n","import * as React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport Entries from './Entries'\nimport { Items } from '../../types'\nimport { startOfDay, endOfDay } from 'date-fns'\nimport { getDateFromLocation } from '../../utils'\n\ntype State = {\n  unsubscriptions: Array<() => void>\n  date: Date\n  isLoading: boolean\n  isShowingDeleteConfirmation: boolean\n  reversableDelete?: Items\n}\n\ntype ExternalProps = FirebaseFunctionProps & FirebaseData & RouteComponentProps\n\ntype Props = ExternalProps & {\n  onChangeEntry: (item: Items) => void\n}\n\nclass EntriesController extends React.Component<Props, State> {\n  state: State = {\n    unsubscriptions: [],\n    date: new Date(),\n    isLoading: false,\n    isShowingDeleteConfirmation: false,\n    reversableDelete: undefined,\n  }\n\n  componentWillMount = async () => {\n    const { location, getDataByDate, subscribeByDate } = this.props\n    const date = getDateFromLocation(location)\n    const unsubscriptions = subscribeByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ unsubscriptions, date, isLoading: true })\n\n    await getDataByDate({\n      startDate: startOfDay(date),\n      endDate: endOfDay(date),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  componentWillReceiveProps = (nextProps: Props) => {\n    const { location } = nextProps\n    const date = getDateFromLocation(this.props.location)\n    const nextDate = getDateFromLocation(location)\n\n    if (date.getTime() === nextDate.getTime()) {\n      return\n    }\n\n    this.handleDateChange(nextDate)\n  }\n\n  handleDateChange = async (newDate: Date) => {\n    const { unsubscriptions } = this.state\n    const { subscribeByDate, getDataByDate } = this.props\n\n    unsubscriptions.forEach(unsubscription => unsubscription())\n\n    const newUnsubscriptions = subscribeByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({\n      unsubscriptions: newUnsubscriptions,\n      date: newDate,\n      isLoading: true,\n    })\n\n    await getDataByDate({\n      startDate: startOfDay(newDate),\n      endDate: endOfDay(newDate),\n    })\n\n    this.setState({ isLoading: false })\n  }\n\n  undoDelete = (item?: Items) => {\n    this.closeDeleteConfirmation()\n    if (item !== undefined) {\n      this.props.unarchiveEntry(item)\n    }\n  }\n\n  handleRemove = (item: Items) => {\n    this.showDeleteConfirmation(item)\n    this.props.archiveEntry(item)\n  }\n\n  showDeleteConfirmation = (item: Items) =>\n    this.setState({ reversableDelete: item })\n\n  closeDeleteConfirmation = () => this.setState({ reversableDelete: undefined })\n\n  render() {\n    const { onChangeEntry, feeds, nappies, sleeps } = this.props\n    const { date, isLoading, reversableDelete } = this.state\n\n    return (\n      <>\n        <Entries\n          isLoading={isLoading}\n          date={date}\n          onChangeEntry={onChangeEntry}\n          removeEntry={this.handleRemove}\n          feeds={feeds}\n          nappies={nappies}\n          sleeps={sleeps}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={reversableDelete !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeDeleteConfirmation}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note archived</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => this.undoDelete(reversableDelete)}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.closeDeleteConfirmation}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(withFirebase()(EntriesController))\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { Units, ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  Input,\n  FormControl,\n  InputLabel,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  amount: string\n  unit: Units\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  amount: '',\n  unit: Units.Millilitres,\n  note: '',\n  time: undefined,\n}\n\nclass FeedInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentWillMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Feed) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { amount, unit, note, time } = this.state\n\n    if (!amount) {\n      this.setState({ error: 'Must add an amount' })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        amount,\n        unit,\n        note,\n        type: ItemTypes.Feed,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Feed) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      amount,\n      unit,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ amount: value })\n  }\n\n  handleUnitChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let { value } = event.currentTarget\n\n    switch (value) {\n      case Units.Millilitres:\n        this.setState({ unit: Units.Millilitres })\n        break\n      case Units.FluidOz:\n        this.setState({ unit: Units.FluidOz })\n        break\n      default:\n        console.warn('Unrecognised unit type selected', value)\n        break\n    }\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { amount, unit, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <div style={{ position: 'relative' }}>\n            <InputLabel htmlFor=\"feed-amount\">Amount</InputLabel>\n            <Input\n              style={{ marginBottom: '1.5rem', width: '100%' }}\n              type=\"number\"\n              value={amount}\n              id=\"feed-amount\"\n              onChange={this.handleAmountChange}\n            />\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n          </div>\n          <TextField\n            id=\"feed-unit\"\n            label=\"Unit\"\n            style={{ marginBottom: '1.5rem' }}\n            SelectProps={{\n              native: true,\n            }}\n            select\n            value={unit}\n            onChange={this.handleUnitChange}\n          >\n            <option key={Units.Millilitres} value={Units.Millilitres}>\n              {Units.Millilitres}\n            </option>\n            <option key={Units.FluidOz} value={Units.FluidOz}>\n              {Units.FluidOz}\n            </option>\n          </TextField>\n          <TextField\n            id=\"feed-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(FeedInput)\n","import * as React from 'react'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport uuid from 'uuid/v4'\nimport {\n  FormControl,\n  Button,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  FormHelperText,\n  FormLabel,\n} from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  isWee: boolean\n  isPoop: boolean\n  note?: string\n  time?: number\n  error?: string\n}\n\nconst defaultState: State = {\n  isWee: false,\n  isPoop: false,\n  note: '',\n  time: undefined,\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Nappy) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { isWee, isPoop, note, time } = this.state\n\n    if (!isWee && !isPoop) {\n      this.setState({ error: \"Baby must've done a wee or a poo\" })\n      return\n    }\n\n    if (!item) {\n      addEntry({\n        isWee,\n        isPoop,\n        note,\n        type: ItemTypes.Nappy,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Nappy) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      isWee,\n      isPoop,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleClear = () => {\n    this.setState(defaultState)\n  }\n\n  handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ time: new Date(event.currentTarget.value).getTime() })\n  }\n\n  handleCheckboxChange = (\n    type: 'wee' | 'poop',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { checked } = event.currentTarget\n\n    if (type == 'wee') {\n      this.setState({ isWee: checked })\n      return\n    }\n\n    this.setState({ isPoop: checked })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  render() {\n    const { isWee, isPoop, note, time, error } = this.state\n\n    const editableTime = time || new Date().getTime()\n    const dateString = format(editableTime, 'yyyy-MM-dd')\n    const timeString = format(editableTime, 'HH:mm')\n    const inputValue = `${dateString}T${timeString}:00`\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl>\n          <TextField\n            style={{ marginBottom: '1.5rem' }}\n            id=\"datetime-local\"\n            label=\"When\"\n            type=\"datetime-local\"\n            value={inputValue}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={this.handleDateChange}\n            required\n          />\n          <FormGroup style={{ marginTop: '1.5rem', marginBottom: '1.5rem' }}>\n            <FormLabel>Nappy contents 🤢</FormLabel>\n            {error != null && error != '' && (\n              <FormHelperText error>{error}</FormHelperText>\n            )}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isWee}\n                  onChange={event => this.handleCheckboxChange('wee', event)}\n                  id=\"is-wee-input\"\n                  value=\"wee\"\n                />\n              }\n              label=\"Wee\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isPoop}\n                  onChange={event => this.handleCheckboxChange('poop', event)}\n                  id=\"is-poop-input\"\n                  value=\"poop\"\n                />\n              }\n              label=\"Poop\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"nappy-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(EntryInput)\n","import * as React from 'react'\nimport uuid from 'uuid/v4'\nimport { Button, FormControl, TextField } from '@material-ui/core'\nimport withFirebase, {\n  FirebaseFunctionProps,\n  FirebaseData,\n} from '../firebase/withFirebase'\nimport { ItemTypes, Items } from '../../types'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst StyledFormControl = styled(FormControl)`\n  margin-bottom: 2rem !important;\n\n  @media (max-width: 976px) {\n    & {\n      width: 100%;\n    }\n  }\n`\n\ntype Props = FirebaseFunctionProps &\n  FirebaseData & {\n    item?: Items\n    onFinish: () => void\n  }\n\ntype State = {\n  endTime?: number\n  note?: string\n  time?: number\n}\n\nconst defaultState: State = {\n  note: '',\n  time: undefined,\n  endTime: 0,\n}\n\nclass SleepInput extends React.Component<Props, State> {\n  state: State = defaultState\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item && item.type == ItemTypes.Sleep) {\n      this.setState({ ...item })\n    }\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const { item, updateEntry, addEntry, onFinish } = this.props\n    const { endTime, note, time } = this.state\n\n    if (!item) {\n      addEntry({\n        endTime,\n        note,\n        type: ItemTypes.Sleep,\n        id: uuid(),\n        time: time || new Date().getTime(),\n        archived: false,\n      })\n      onFinish()\n      return\n    }\n\n    if (item.type !== ItemTypes.Sleep) {\n      onFinish()\n      return\n    }\n\n    updateEntry({\n      ...item,\n      endTime,\n      note,\n      time: time || new Date().getTime(),\n    })\n    onFinish()\n  }\n\n  handleDateChange = (\n    key: 'time' | 'endTime',\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const date = event.currentTarget.value\n\n    // 'time' value is required so only 'endTime' can be empty, which means it is safe to\n    // always set 'endTime' to undefined if we get an empty value here\n    if (date === '') {\n      this.setState({ endTime: 0 })\n      return\n    }\n\n    const time = new Date(date).getTime()\n    if (key === 'endTime') {\n      this.setState({ endTime: time })\n      return\n    }\n    this.setState({ time })\n  }\n\n  handleNoteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value\n    if (value == null) {\n      return\n    }\n\n    this.setState({ note: value })\n  }\n\n  convertTimeToInputString = (time?: number): string => {\n    if (time === undefined) {\n      return ''\n    }\n\n    if (time === 0) {\n      return ''\n    }\n\n    const dateString = format(time, 'yyyy-MM-dd')\n    const timeString = format(time, 'HH:mm')\n    return `${dateString}T${timeString}:00`\n  }\n\n  render() {\n    const { endTime, note, time } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <StyledFormControl style={{ marginBottom: '2rem' }}>\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"datetime\"\n            label=\"Fell asleep\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(time)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('time', event)\n            }\n            required\n          />\n          <TextField\n            style={{ marginBottom: '2rem' }}\n            id=\"end-datetime\"\n            label=\"Woke up\"\n            type=\"datetime-local\"\n            value={this.convertTimeToInputString(endTime)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              this.handleDateChange('endTime', event)\n            }\n          />\n          <TextField\n            id=\"sleep-note\"\n            label=\"Note\"\n            style={{ marginBottom: '1.5rem' }}\n            multiline\n            fullWidth\n            rowsMax=\"4\"\n            value={note}\n            onChange={this.handleNoteChange}\n          />\n        </StyledFormControl>\n        <div>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Save\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withFirebase()(SleepInput)\n","import * as React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { CloseSharp } from '@material-ui/icons'\nimport FeedInput from './FeedInput'\nimport NappyInput from './NappyInput'\nimport SleepInput from './SleepInput'\nimport { ItemTypes, Items } from '../../types'\nimport { Typography, IconButton } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`\n\ntype Props = {\n  onFinish: () => void\n  item?: Items\n}\n\ntype State = {\n  selectedInputType: ItemTypes\n  isEditingItem: boolean\n}\n\nclass EntryInput extends React.Component<Props, State> {\n  state: State = {\n    selectedInputType: ItemTypes.Feed,\n    isEditingItem: false,\n  }\n\n  componentDidMount() {\n    const { item } = this.props\n    if (item) {\n      this.setState({ isEditingItem: true, selectedInputType: item.type })\n    }\n  }\n\n  handleTypeChange = ({}, value: string) => {\n    switch (value) {\n      case ItemTypes.Feed:\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n      case ItemTypes.Nappy:\n        this.setState({ selectedInputType: ItemTypes.Nappy })\n        break\n      case ItemTypes.Sleep:\n        this.setState({ selectedInputType: ItemTypes.Sleep })\n        break\n      default:\n        console.warn('Unrecognised update type selection', value)\n        this.setState({ selectedInputType: ItemTypes.Feed })\n        break\n    }\n  }\n\n  handleCloseClick = () => {\n    this.props.onFinish()\n  }\n\n  renderInput() {\n    const { selectedInputType } = this.state\n\n    switch (selectedInputType) {\n      case ItemTypes.Feed:\n        return <FeedInput {...this.props} />\n      case ItemTypes.Nappy:\n        return <NappyInput {...this.props} />\n      case ItemTypes.Sleep:\n        return <SleepInput {...this.props} />\n    }\n  }\n\n  renderLastEditDetails = () => {\n    const { item } = this.props\n    if (item === undefined) {\n      return\n    }\n\n    const { lastEdit } = item\n    if (lastEdit === undefined) {\n      return\n    }\n\n    return (\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        Last edited by {lastEdit.email} ({format(lastEdit.time, 'p')})\n      </Typography>\n    )\n  }\n\n  render() {\n    const { isEditingItem, selectedInputType } = this.state\n\n    return (\n      <Wrapper>\n        <div style={{ marginBottom: '2.2rem' }}>\n          <Header>\n            <Typography\n              variant=\"h1\"\n              style={{ fontSize: '2rem', marginBottom: '0.5rem' }}\n              display=\"block\"\n            >\n              {isEditingItem ? 'Edit' : 'Add'} an entry\n            </Typography>\n            <IconButton\n              style={{ position: 'absolute', top: '0.8rem', right: '0.8rem' }}\n              onClick={this.handleCloseClick}\n              aria-label=\"Close\"\n            >\n              <CloseSharp />\n            </IconButton>\n          </Header>\n          {isEditingItem && this.renderLastEditDetails()}\n        </div>\n        {!isEditingItem && (\n          <FormControl style={{ marginBottom: '2rem' }}>\n            <FormLabel>Type</FormLabel>\n            <RadioGroup\n              aria-label=\"Type\"\n              name=\"type\"\n              value={selectedInputType}\n              onChange={this.handleTypeChange}\n            >\n              <FormControlLabel\n                value={ItemTypes.Feed}\n                control={<Radio />}\n                label=\"Feed\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Nappy}\n                control={<Radio />}\n                label=\"Nappy\"\n                disabled={isEditingItem}\n              />\n              <FormControlLabel\n                value={ItemTypes.Sleep}\n                control={<Radio />}\n                label=\"Sleep\"\n                disabled={isEditingItem}\n              />\n            </RadioGroup>\n          </FormControl>\n        )}\n        {this.renderInput()}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EntryInput\n","import React from 'react'\nimport 'typeface-roboto'\nimport styled from 'styled-components'\nimport Firebase from './components/firebase/Firebase'\nimport EntriesController from './components/entries/EntriesController'\nimport EntryInput from './components/entry-input/EntryInput'\nimport { Items } from './types'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebase, firebaseAuth } from './components/firebase/Firebase'\nimport Dialog from '@material-ui/core/Dialog'\nimport Slide from '@material-ui/core/Slide'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { format } from 'date-fns'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport parseQuery from 'query-string'\n\nfunction TransitionUp<P>(props: P) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Body = styled.div`\n  padding-right: 24px;\n  padding-left: 24px;\n\n  @media (max-width: 1280px) {\n    padding-right: 18px;\n    padding-left: 18px;\n  }\n\n  @media (max-width: 976px) {\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n`\n\ntype State = {\n  isInitialisingFirebase: boolean\n  isInputtingEntry: boolean\n  isSignedIn: boolean\n  entryBeingEdited?: Items\n}\n\nconst today = format(new Date(), 'yyyy-MM-dd')\n\nclass App extends React.Component<RouteComponentProps, State> {\n  state: State = {\n    isInitialisingFirebase: false,\n    isInputtingEntry: false,\n    isSignedIn: false,\n    entryBeingEdited: undefined,\n  }\n\n  signInConfig: firebaseui.auth.Config = {}\n\n  unregisterAuthObserver: firebase.Unsubscribe | null = null\n\n  async componentWillMount() {\n    window.addEventListener('beforeinstallprompt', event => {\n      console.log(event)\n    })\n\n    const { history, location } = this.props\n\n    const queries = parseQuery.parse(location.search)\n    if (queries.date == null) {\n      history.replace(`?date=${today}`)\n    }\n\n    this.signInConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false,\n      },\n    }\n\n    this.setState({ isInitialisingFirebase: true })\n    await Firebase.initialise()\n    const currentUser = firebaseAuth.currentUser\n    if (currentUser == null) {\n      this.setState({ isSignedIn: false })\n    }\n    this.unregisterAuthObserver = firebaseAuth.onAuthStateChanged(user =>\n      this.setState({ isSignedIn: !!user, isInitialisingFirebase: false }),\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver == null) {\n      return\n    }\n    this.unregisterAuthObserver()\n  }\n\n  handleAddEntry = () => {\n    this.setState({ isInputtingEntry: true, entryBeingEdited: undefined })\n  }\n\n  handleChangeEntry = (item: Items) => {\n    this.setState({ entryBeingEdited: item, isInputtingEntry: true })\n  }\n\n  handleFinishAdding = () => {\n    this.setState({ isInputtingEntry: false })\n  }\n\n  handleFinishEditing = () => {\n    this.setState({ isInputtingEntry: false, entryBeingEdited: undefined })\n  }\n\n  render() {\n    const {\n      isInitialisingFirebase,\n      isInputtingEntry,\n      entryBeingEdited,\n      isSignedIn,\n    } = this.state\n\n    if (isInitialisingFirebase) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            marginTop: '5rem',\n          }}\n        >\n          <CircularProgress\n            style={{ marginRight: 'auto', marginLeft: 'auto' }}\n          />\n        </div>\n      )\n    }\n\n    if (!isSignedIn) {\n      return (\n        <StyledFirebaseAuth\n          uiConfig={this.signInConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      )\n    }\n\n    return (\n      <Body>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput onFinish={this.handleFinishAdding} />\n        </Dialog>\n        <Dialog\n          fullScreen\n          TransitionComponent={TransitionUp}\n          open={isInputtingEntry && !!entryBeingEdited}\n          onClose={() => this.setState({ isInputtingEntry: false })}\n        >\n          <EntryInput\n            onFinish={this.handleFinishEditing}\n            item={entryBeingEdited}\n          />\n        </Dialog>\n        <EntriesController onChangeEntry={this.handleChangeEntry} />\n        <Fab\n          style={{ position: 'fixed', right: '1.5rem', bottom: '1.5rem' }}\n          onClick={this.handleAddEntry}\n          color=\"secondary\"\n          aria-label=\"Add\"\n          classes={{}}\n        >\n          <AddIcon />\n        </Fab>\n      </Body>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700],\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n})\n\nconst UnknownRoute = () => <h1>Oops, this page couldn't be found</h1>\n\nconst Routes = () => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"*\" component={UnknownRoute} />\n      </Switch>\n    </MuiThemeProvider>\n  </MuiPickersUtilsProvider>\n)\n\nReactDOM.render(\n  <BrowserRouter basename=\"babba-tracker\">\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}